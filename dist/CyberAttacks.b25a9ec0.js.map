{"mappings":"ICwCI,EACA,EACA,EAyEA,EACA,EAEA,EACA,EC3GG,MAAM,EAAU,eAAgB,CAAQ,CAAE,EAAc,MAAM,EACnE,GAAI,CAEF,IAAM,EAAW,MAAM,MAAM,CAAC,IAAI,EAAE,EAAS,IAAI,CAAC,EAG5C,EAAa,MAAM,EAAS,IAAI,GAGhC,EAAU,SAAS,aAAa,CAAC,MACvC,CAAA,EAAQ,SAAS,CAAG,EAGpB,IAAM,EAAa,EAAQ,aAAa,CAAC,MAExB,CAAA,QAAb,GAAsB,IAExB,EAAW,YAAY,CAAC,sBAAuB,iBAC/C,EAAW,YAAY,CAAC,KAAM,QAIhC,SACG,cAAc,CAAC,GACf,kBAAkB,CAAC,YAAa,EAAQ,SAAS,CACtD,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,qBAAsB,EACtC,CACF,EAEO,SAAS,EAAU,CAAG,EAC3B,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,GAAO,CAC3C,CAUO,SAAS,EAAO,CAAI,CAAE,CAAK,EAChC,IAAM,EAAa,SAAS,WAAW,CAAC,EAAE,CAC1C,EAAW,UAAU,CAAC,CAAA,EAAG,EAAK,GAAG,EAAE,EAAM,EAAE,CAAC,CAAE,EAAW,QAAQ,CAAC,MAAM,CAC1E,CAGO,SAAS,EAAW,CAAS,EAClC,OAAO,AAAmC,EAAnC,AAAC,CAAA,KAAK,MAAM,GAAK,EAAA,EAAK,OAAO,CAAC,GAAS,CAChD,CC5DO,MAAM,EAAY,CACvB,UACA,YACA,UACA,UACA,SACD,CACY,EAAgB,CAC3B,WACA,SACA,UACA,SACA,YACA,OACA,QACA,YACA,OACA,OACA,SACA,QACA,YACA,SACA,UACA,YACA,SACA,aACA,QACA,SACA,WACA,QACA,WACA,OACA,SACD,CAEY,EAAkB,CAC7B,QACA,SACA,SACA,WACA,WACA,OACA,SACA,SACA,OACA,OACA,UACA,OACA,UACD,CAEY,EAAgB,CAC3B,SACA,UACA,YACA,YACA,WACD,CAEY,EAAgB,CAC3B,WACA,UACA,SACA,WACA,QACA,YACA,aACD,CACY,EAAS,IACjB,KACA,KACA,KACA,EACJ,CAoEY,EAAa,CAlEF,CACtB,uDACA,yDACA,wDACA,0DACA,6DACA,8DACA,yDACA,0DACA,+DACA,iDACA,qDACA,yDACA,wDACA,iEACA,mEACA,8DACA,gEACA,iEACA,8EACA,kEACD,CACuB,CACtB,6CACA,kDACA,0CACA,2DACA,kDACA,yCACA,oDACA,8DACA,4DACA,sDACA,wDACA,0DACA,gDACA,mDACA,2DACA,2DACA,2DACA,uDACA,0DACA,+DACD,CACuB,CACtB,mDACA,4CACA,+CACA,iDACA,8CACA,mDACA,0CACA,+CACA,8CACA,+CACA,sDACA,4DACA,gDACA,oDACA,2DACA,+CACA,iDACA,8DACA,4DACA,iEACD,CACuD,CAE3C,EAAW,CACtB,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,aAAc,EAC5E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,aAAc,EAC5E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,aAAc,EAC5E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,aAAc,EAC5E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,aAAc,EAC5E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,aAAc,EAC5E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,aAAc,EAC5E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,aAAc,EAC5E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,aAAc,EAC5E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,aAAc,EAC5E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC1E,CAAE,GAAI,cAAe,MAAO,YAAa,IAAK,OAAQ,OAAQ,WAAY,EAC3E,CElJD,IAAA,EAjCA,MACE,aAAc,CACZ,IAAI,CAAC,MAAM,CAAG,2BAChB,CAEA,MAAM,QAAQ,CAAI,CAAE,CAClB,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,CAAA,EAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAA,CAAM,EAC/D,GAAI,CAAC,EAAS,EAAE,CAAE,MAAM,AAAI,MAAM,CAAC,OAAO,EAAE,EAAS,MAAM,CAAA,CAAE,EAC7D,OAAO,MAAM,EAAS,IAAI,EAC5B,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,GACP,IACT,CACF,CAEA,MAAM,YAAY,CAAI,CAAE,CAAK,CAAE,CAC7B,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,CAAA,EAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAE,CACzD,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,SAAS,CAAC,CAAE,KAAA,EAAM,MAAA,CAAM,EACrC,GACM,EAAS,MAAM,EAAS,IAAI,GAClC,GAAI,CAAC,EAAS,EAAE,CAAE,MAAM,AAAI,MAAM,EAAO,KAAK,EAE9C,OADA,QAAQ,GAAG,CAAC,CAAC,SAAS,EAAE,EAAO,OAAO,CAAA,CAAE,EACjC,CAAA,CACT,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,GACP,CAAA,CACT,CACF,CACF,EJEA,IAAI,EAAc,CAAA,EAId,EAAiB,EAAE,CACnB,EAAc,EAId,EAAmB,EAEvB,MAAM,EAAM,WAEV,EAAS,SAAS,cAAc,CAAC,MACnC,EAEM,EAAY,WAChB,EAAe,SAAS,cAAc,CAAC,eACzC,EAGM,EAAW,SAAU,CAAI,EAC7B,MAAO,CAAA,EAAG,EAAK,CAAC,EAAE,OAAO,GAAa,QAAQ,CAAC,EAAG,KAAA,CAAM,AAC1D,EAIM,EAAW,SAAU,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,EAAQ,CAAC,CAAE,EAAO,CAAC,CAAE,EAAU,CAAC,EACzE,IAKI,EALE,EAAQ,AAAC,CAAA,EAAK,CAAA,EAAM,EACpB,EAAQ,AAAC,CAAA,EAAK,CAAA,EAAM,EAMX,EADX,KAAK,GAAG,CAAC,IAAU,KAAK,GAAG,CAAC,GAC9B,EAAQ,EAAiB,CAAC,KAAK,EAAE,EAAA,CAAO,CAAiB,CAAC,IAAI,EAAE,EAAA,CAAO,CAEvE,EAAQ,EAAiB,CAAC,IAAI,EAAE,EAAA,CAAO,CAAiB,CAAC,EAAE,EAAE,EAAA,CAAO,CAGtE,SAAS,aAAa,CAAC,iBAAiB,kBAAkB,CACxD,aACA,CAAC;AACQ,aAAA,EAAE,EAAS;AACR,gBAAA,EAAE,EAAuD;AAC3D,cAAA,EAAE,EAAG,CAAC,EAAE,EAAG,CAAC,EAfV,EAAQ,EAAO,EAeG,CAAC,EAdnB,EAAQ,EAAO,EAcY,CAAC,EAAE,EAAK,EAAG,CAAC,EAAE,EAAK,EAAG;A;AAE9C,mBAAA,EAAE,EACX,UACA,cAAc,EAAE,EAAM,MAAM,EAAE,EAAG,MAAM,EAAE,EAAG;AACtD,CAAC,EAIC,EAAa,EAAS,QACtB,GACF,EAEM,EAAgB,SAAU,CAAE,EAChC,IAAM,EAAQ,SAAS,cAAc,CAAC,GAAI,OAAO,GAC3C,EAAW,EAAM,CAAC,CAAG,EAAM,KAAK,CAAG,EAGzC,MADe,CAAC,EADC,EAAM,CAAC,CAAG,EAAM,MAAM,CAAG,EACP,AAErC,EAGM,EAAe,SAAU,CAAG,CAAE,CAAG,CAAE,CAAK,CAAE,EAAO,AAAA,EAAW,EAAE,EAClE,EACE,EAAc,EAAI,CAAC,EAAE,CACrB,EAAc,EAAI,CAAC,EAAE,CACrB,EAAc,EAAI,CAAC,EAAE,CACrB,EAAc,EAAI,CAAC,EAAE,CACrB,EACA,EAEJ,EACM,EAAa,SAAU,CAAM,EACjC,EAAa,WAAW,CAAC,SAAS,cAAc,CAAC,GACnD,EAIA,IAAI,EAAW,EAIf,MAAM,EAAW,WAGf,EAAO,gBAAgB,CAAC,QAAS,SAAU,CAAK,EAC9C,IAAI,EAAS,EAAO,YAAY,GAAG,OAAO,GAC1C,EAAO,EAAO,CAAC,CAAG,EAAM,OAAO,CAAG,EAAO,CAAC,CAC1C,EAAO,EAAO,CAAC,CAAG,EAAM,OAAO,CAAG,EAAO,CAAC,CAGzB,KAAb,IACF,EACE,EACA,EACA,EACA,EACA,AAAA,EAAU,GACT,AAAA,CAAA,KAAK,MAAM,GAAK,EAAA,EAAO,GAE1B,EAAO,GACP,EAAW,GAEb,EAAS,EACT,EAAS,EACT,QAAQ,GAAG,CAAC,oBAAqB,EAAM,EAGzC,EACF,EAGM,EAAS,SAAU,CAAQ,CAAE,EAAS,CAAC,CAAE,EAAc,CAAC,EAC5D,IAAI,EAAW,MAAM,QAAQ,CAAC,CAC5B,KAAM,CAAA,EACN,UAAW,QACb,GACM,EAAU,SAAS,aAAa,CAAC,CAAC,CAAC,EAAE,EAAA,CAAU,EACrD,IAAI,EAAa,EAAQ,cAAc,EACvC,CAAA,EAAQ,KAAK,CAAC,UAAU,CAAG,UAC3B,EAAS,GAAG,CAAC,CACX,QAAS,EACT,iBAAkB,CAAC,MAAM,aAAa,CAAE,CAAC,EAAW,CACpD,OAAQ,gBACR,SAAU,AGhKgB,KHgKC,EAC3B,MAAO,CACT,GACI,AAAW,IAAX,GAEF,EAAS,GAAG,CACV,CACE,QAAS,CAAC,CAAC,EAAE,EAAS,OAAO,CAAC,OAAQ,UAAA,CAAW,CACjD,QAAS,EACT,MAAO,CAAC,EAAG,GAAI,EAAE,CACjB,SAAU,KAEV,OAAQ,aACV,EACA,CAAC,EAAE,EAAE,AG9KmB,KH8KF,EAAc,GAAA,CAAK,EAGzC,AAAW,IAAX,GAEF,EAAS,GAAG,CACV,CACE,QAAS,CAAC,CAAC,EAAE,EAAS,OAAO,CAAC,CAC9B,QAAS,EACT,MAAO,CAAC,EAAG,GAAI,EAAE,CACjB,SAAU,KAEV,OAAQ,aACV,EACA,CAAC,EAAE,EAAE,AG5LmB,KH4LF,EAAc,GAAA,CAAK,CAG/C,EAKA,SAAS,gBAAgB,CAAC,mBAAoB,KAC5C,CAAA,EAAc,CAAC,SAAS,MAAM,AAAN,IAEtB,EAAc,EAEd,EAAe,OAAO,CAAC,AAAC,IACtB,EACE,CAAK,CAAC,EAAE,CACR,CAAK,CAAC,EAAE,CACR,CAAK,CAAC,EAAE,CACR,CAAK,CAAC,EAAE,CACR,CAAK,CAAC,EAAE,CACR,CAAK,CAAC,EAAE,CACR,CAAK,CAAC,EAAE,CAEZ,GACA,EAAiB,EAAE,CAEvB,GAIA,MAAM,EAAa,SAAU,CAAG,EAC9B,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EACpC,EAKM,EAAe,SACnB,CAAG,CACH,CAAG,CACH,EAAQ,AAAA,EAAU,EAAE,CACpB,EAAO,CAAC,CACR,EGvO+B,GHuOH,CAC5B,EAAc,CAAA,EAEd,IAAI,EAAW,KAAK,GAAG,GACnB,EAAiB,EAAW,GAG5B,EAAc,EAId,EAAY,YAAY,KAI1B,GAAI,CAAC,EAAa,CAChB,cAAc,GAEd,EAAe,IAAI,CAAC,CAAC,EAAK,EAAK,EAAO,EAAM,EAAU,EAAY,EAIlE,MACF,CAoBA,GAAI,KAAK,GAAG,GAAK,EAAW,EAAiB,EAAa,CAExD,EAAW,KAAK,GAAG,GAEnB,EGvRwB,IHwRxB,EAAiB,EAAW,GAAY,AGtRhB,KHsRiC,EAEzD,IAAI,EAAQ,EACR,EAAQ,EACZ,GAAI,AAAA,EAAU,QAAQ,CAAC,GAGrB,IADA,EAAQ,EAAW,GACZ,AAAU,eAAV,GACL,EAAQ,EAAW,GAMvB,GAHI,AAAA,EAAU,QAAQ,CAAC,IACrB,CAAA,EAAQ,EAAW,EADrB,EAGI,AAAU,IAAV,GAAe,AAAqB,IAArB,EAEjB,EAAO,EAAO,EAAO,EAAO,GACxB,AAAA,EAAU,QAAQ,CAAC,IAAQ,AAAiB,IAAjB,AAAA,EAAU,IAEvC,WAAW,KACT,IAAK,IAAI,EAAI,EAAG,EAAI,AAAA,EAAU,GAAK,EAAG,IACpC,EAAO,EAAO,EAAW,GAAM,EAAO,EAAM,EAEhD,EAAG,AG7SiB,KH6SA,EAAc,WAE/B,GAAI,AAAqB,IAArB,EAAwB,CAEjC,IAAM,EAAU,SAAS,cAAc,CAAC,GAClC,EAAS,SAAS,cAAc,CAAC,CAAA,EAAG,EAAI,OAAO,CAAC,GACtD,EAAQ,SAAS,CAAC,MAAM,IAAI,EAAQ,SAAS,EACzC,IACF,EAAO,SAAS,CAAC,MAAM,IAAI,EAAO,SAAS,EAC3C,EAAO,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAA,CAAO,EACrC,EAAO,eAAe,CAAC,MAEzB,EAAQ,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAA,CAAO,EAC9B,AAAiB,MAAjB,EAAI,KAAK,CAAC,MACZ,EAAU,aAAc,GAAI,IAAM,EAAG,IAAK,cAC1C,EAAO,EAAK,EAAG,GAGf,WAAW,KACT,SAAS,aAAa,CAAC,iBAAiB,kBAAkB,CACxD,aACA,0CACE,EAAc,CAAA,EAAG,EAAM,OAAO,CAAC,CAAC,CAAC,EAAE,CAAG,YAEtC,EAAc,CAAA,EAAG,EAAM,OAAO,CAAC,CAAC,CAAC,EAAE,CAAG;ACtUzC,WDwUF,EAEC,WAAW,KACL,SAAS,aAAa,CAAC,YACzB,EAAa,WAAW,CAAC,SAAS,aAAa,CAAC,WAEpD,EAAG,IACL,EAAG,AG9UiB,KH8UA,EAAc,IAElC,EACE,EACA,AAAA,CAAU,CAAC,EAAQ,EAAE,CAAC,AAAA,EAAU,AAAA,CAAU,CAAC,EAAE,CAAC,MAAM,EAAI,EAAE,CAC1D,aACA,SAGF,EACE,EACA,AAAA,CAAU,CAAC,EAAQ,EAAE,CAAC,AAAA,EAAU,AAAA,CAAU,CAAC,EAAE,CAAC,MAAM,EAAI,EAAE,CAC1D,aACA,cAEF,EAAU,aAAc,GAAI,IAAM,EAAG,IAAK,cAC1C,EAAO,EAAK,EAAG,GAEnB,CACF,CACF,EAAG,IACL,EAEM,EAAY,SAChB,CAAE,CACF,EAAS,EAAE,CACX,EAAW,GAAI,CACf,EAAU,CAAC,CACX,EAAU,GAAG,CACb,CAAQ,EAER,IAII,EAJE,EACJ,AAAA,EAAgB,QAAQ,CAAC,IAAO,AAAO,eAAP,EAC5B,WACA,WAGJ,EADE,IAEO,EAAG,WAAW,GAAG,UAAU,CAAC,MACzB,EAAG,WAAW,GAAG,OAAO,CAAC,gBAAiB,SAE1C,GAEd,WAAW,KACT,SAAS,aAAa,CAAC,iBAAiB,kBAAkB,CACxD,aACA,CAAC,aAAa,EAAE,EAAI,IAAI,EAAE,EAAc,EAAG,CAAC,EAAE,CAAG,EAAQ,KAAK,EAC5D,EAAc,EAAG,CAAC,EAAE,CAAG,EACxB,EAAE,EAAE,EAAU;AACrB,CAAC,EAEG,IAAM,EAAc,SAAS,aAAa,CAAC,CAAC,CAAC,EAAE,EAAA,CAAK,EACpD,WAAW,KACL,GACF,EAAY,SAAS,CAAC,GAAG,CAAC,UAE9B,EAAG,GACH,WAAW,KACL,GACF,EAAY,MAAM,EAEtB,EAAG,IACL,EAAG,EACL,EAEM,EAAS,SAAU,CAAG,CAAE,CAAG,CAAE,CAAK,CAAE,EAAO,CAAC,CAAE,EAAM,CAAC,EACzD,EAAa,EAAK,EAAK,EAAO,AAAA,EAAW,IAEzC,IAAM,EAAU,SAAS,aAAa,CAAC,CAAC,CAAC,EAAE,EAAA,CAAK,EAChD,EAAQ,SAAS,CAAC,GAAG,CAAC,OAAQ,cAC9B,WAAW,KACT,EAAQ,SAAS,CAAC,MAAM,CAAC,aAC3B,EAAG,KACH,EAAO,GACH,AAAQ,IAAR,GACF,EAAU,EAAK,GAAI,IAAM,EAAG,KAE9B,EAAU,EAAK,IAAM,IAAM,EAAG,GAC1B,AAAQ,IAAR,EACF,EACE,EACA,AAAA,CAAU,CAAC,EAAQ,EAAE,CAAC,AAAA,EAAU,AAAA,CAAU,CAAC,EAAE,CAAC,MAAM,EAAI,EAAE,CAC1D,EACA,GAEO,AAAO,GAAP,GACT,EACE,EACA,EACA,EACA,EAAI,WAAW,GAAG,OAAO,CAAC,gBAAiB,UAI/C,IAAM,EAAiB,EACvB,WAAW,WACL,SAAS,cAAc,CAAC,IAC1B,EAAW,GAKX,SAAS,cAAc,CAAC,CAAA,EAAG,EAAe,OAAO,CAAC,OAAQ,UAAA,CAAW,GAErE,EAAW,CAAA,EAAG,EAAe,OAAO,CAAC,OAAQ,UAAA,CAAW,CAE5D,EGxb4B,KHyb9B,EAaM,EAAY,WAChB,IAAM,EAAa,SAAS,cAAc,CAAC,eAE3C,AAAA,EACE,CAAC,CAAC,EAAE,EAAW,iBAAiB,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,CACrD,CAAC;AAC0F,+FAAA,CAAC,EAE9F,AAAA,EACE,CAAC,CAAC,EAAE,EAAW,iBAAiB,CAAC,SAAS,CAAC,EAAE,CAAA,CAAE,CAC/C;A;A;A;A;A;A;A;AAQF,EAAA,CAAC,CAEH,EAEM,EAAa,SAAU,EAAa,QAAQ,EAChD,IAAI,EAcJ,MAbA,AAAe,YAAf,GACK,CAAA,EAAO,AAAA,CAAa,CAAC,AAAA,EAAU,AAAA,EAAc,MAAM,EAAI,EAAE,AAAF,EAE5D,AAAe,cAAf,GACK,CAAA,EAAO,AAAA,CAAe,CAAC,AAAA,EAAU,AAAA,EAAgB,MAAM,EAAI,EAAE,AAAF,EAEhE,AAAe,YAAf,GACK,CAAA,EAAO,AAAA,CAAa,CAAC,AAAA,EAAU,AAAA,EAAc,MAAM,EAAI,EAAE,AAAF,EAE5D,AAAe,YAAf,GACK,CAAA,EAAO,AAAA,CAAa,CAAC,AAAA,EAAU,AAAA,EAAc,MAAM,EAAI,EAAE,AAAF,EAE5D,AAAe,WAAf,GAA2B,CAAA,EAAO,AAAA,CAAM,CAAC,AAAA,EAAU,AAAA,EAAO,MAAM,EAAI,EAAE,AAAF,EAC7D,CACT,EAEM,EAAY,SAAU,EAAc,CAAC,CAAE,CAAW,CAAE,CAAQ,CAAE,CAAQ,EAC1E,IAAI,EAAU,YACT,EAAS,WAAW,GAAG,UAAU,CAAC,MAGrC,EAAU,YAFV,AAAkB,KAAlB,AAAA,EAAU,KAAc,CAAA,EAAU,mBAAA,EAKpC,IAAM,EAAO,CAAC;AACY,4BAAA,EAAE,EAAY;A;AAEpB,sBAAA,EAAE,EAAQ,GAAG,EAAE;A;A;A;AAIJ,iCAAA,EAAE,IAAI,OAAO,kBAAkB,CAChD,SACA;A;AAEI,oBAAA,EAAE,EAAS;AACK,oCAAA,EAAE,EAAY;A;A;AAG9B,oBAAA,EAAE,EAAS;A;A;A;AAInB,YAAA,CAAC,CACL,EAAW,SAAS,sBAAsB,CAAC,aAC3C,EAAM,SAAS,cAAc,CAAC,MACpC,CAAA,EAAS,MAAM,EAAI,IAAK,EAAI,WAAW,CAAC,EAAI,gBAAgB,EAC5D,EAAI,kBAAkB,CAAC,aAAc,EACvC,EAIA,eAAe,IACb,IAAI,EAAM,IAAI,EAEV,EAAQ,MAAO,EAAI,OAAO,CADnB,QAC8B,CAAC,EACtC,EAAS,EAAM,MAAM,CACrB,EAAU,EACd,EAAmB,EAanB,AALE,CAAA,EAAS,CAAO,EAKX,IAAI,CAAC,CAAC,EAAG,IAAM,EAAE,EAAE,CAAG,EAAE,EAAE,EAEjC,IAAM,EAAc,WAClB,IAAI,EAAW,KAAK,GAAG,GAAK,CAAM,CAAC,EAAE,CAAC,EAAE,CACxC,EAAO,OAAO,CAAC,AAAC,IACd,EAAK,EAAE,EAAI,EAAW,GACxB,EACF,EACA,IAEA,YAAY,KACsC,IAA5C,KAAK,GAAG,CAAC,CAAM,CAAC,EAAQ,CAAC,EAAE,CAAG,KAAK,GAAG,MACxC,EACE,EAAW,CAAM,CAAC,EAAQ,CAAC,KAAK,EAChC,CAAM,CAAC,EAAQ,CAAC,GAAG,CACnB,EACA,GACA,CAAC,UAAU,EAAE,CAAM,CAAC,EAAQ,CAAC,MAAM,CAAA,CAAE,EAEvC,KAEE,KAAK,GAAG,CAAC,CAAM,CAAC,EAAQ,CAAC,EAAE,CAAG,KAAK,GAAG,IAAM,GAC9C,CAAA,EAAmB,CAAA,EAEjB,AAA4C,IAA5C,KAAK,GAAG,CAAC,CAAM,CAAC,EAAQ,CAAC,EAAE,CAAG,KAAK,GAAG,KACxC,CAAA,EAAmB,CAAA,CAEvB,EAAG,MAsBH,AAXoB,SAAU,EAAW,GAAK,EAE5C,YAAY,UACV,EAAU,EAEV,EAAS,AADT,CAAA,EAAS,MAAM,EAAI,OAAO,CA3DnB,QA2D8B,CAAC,CAAA,EACvB,MAAM,CACrB,MAAM,IACN,EAAO,IAAI,CAAC,CAAC,EAAG,IAAM,EAAE,EAAE,CAAG,EAAE,EAAE,CACnC,EAAG,EACL,EAzDsB,IA4DxB,CAEA,eAAe,IACb,GAAI,CAEF,MAAM,AAAA,EAAQ,MAAO,gBACrB,MAAM,IACN,MAAM,IACN,IAEA,IACA,IAIA,EAAa,YAAa,UAAW,EAAG,IACxC,EAAa,YAAa,UAAW,EAAG,IACxC,EAAa,YAAa,UAAW,EAAG,GAAK,KAC7C,EAAa,YAAa,UAAW,EAAG,GAAK,KAC7C,EAAa,YAAa,UAAW,EAAG,GAAK,KAC7C,EAAa,YAAa,UAAW,EAAG,GAAK,KAC7C,EAAa,YAAa,UAAW,EAAG,IAExC,EAAa,eAAgB,EAAG,EAAG,EAAG,IAAQ,GAC9C,EAAa,eAAgB,EAAG,EAAG,EAAG,IAAQ,GAC9C,EAAa,aAAc,EAAG,EAAG,EAAG,IAAQ,GAC5C,EAAa,aAAc,EAAG,EAAG,EAAG,IAAQ,EAG9C,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,yBAA0B,EAC1C,CACF,CAGA,SAAS,gBAAgB,CAAC,mBAAoB","sources":["<anon>","main.js","support.js","data.js","settings.js","api.js"],"sourcesContent":["\"use strict\";\nconst $86ac46d6b1918ed8$export$dc88bfc5926ef8d8 = function(selector, property, newValue) {\n    for (const sheet of document.styleSheets){\n        for (const rule of sheet.cssRules)if (rule.selectorText === selector) rule.style[property] = newValue;\n    }\n};\nconst $86ac46d6b1918ed8$export$c32505ea942c7f01 = async function(fileName, destination = \"body\") {\n    try {\n        // Fetch the SVG file\n        const response = await fetch(`SVG/${fileName}.svg`);\n        // Convert the response to text (SVG content)\n        const svgContent = await response.text();\n        // Create a temporary container for the SVG content\n        const tempDiv = document.createElement(\"div\");\n        tempDiv.innerHTML = svgContent;\n        // Get the first SVG element from the loaded content\n        const svgElement = tempDiv.querySelector(\"svg\");\n        if (fileName === \"map\" && svgElement) {\n            // Set preserveAspectRatio attribute if fileName is 'main'\n            svgElement.setAttribute(\"preserveAspectRatio\", \"xMidYMin meet\");\n            svgElement.setAttribute(\"id\", \"map\");\n        }\n        // Insert the modified SVG content into the specified destination\n        document.getElementById(destination).insertAdjacentHTML(\"beforeend\", tempDiv.innerHTML);\n    } catch (error) {\n        console.error(\"Error loading SVG:\", error);\n    }\n};\nfunction $86ac46d6b1918ed8$export$3c5f89dae98e900b(num) {\n    return Math.floor(Math.random() * num) + 1;\n}\nfunction $86ac46d6b1918ed8$export$5854e7256eb210d3() {\n    const r = Math.floor(Math.random() * 256); // Random number between 0-255\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgb(${r}, ${g}, ${b})`; // Return as an RGB string\n}\nfunction $86ac46d6b1918ed8$export$bd362de25b6c5ab1(Name, rules) {\n    const styleSheet = document.styleSheets[0]; // Get the first stylesheet\n    styleSheet.insertRule(`${Name} { ${rules} }`, styleSheet.cssRules.length);\n}\nfunction $86ac46d6b1918ed8$export$40532d2a8b2a1d98(bendiness) {\n    return (Math.random() - 0.5).toFixed(1) * 2 * bendiness;\n}\n\n\n\"use strict\";\nconst $1a6cd9663479e45c$export$e5ad74579c86b003 = [\n    \"berylia\",\n    \"crimsonia\",\n    \"revalia\",\n    \"netoria\",\n    \"random\"\n];\nconst $1a6cd9663479e45c$export$6d129767a7753f41 = [\n    \"Bancroft\",\n    \"Moazac\",\n    \"Lambeck\",\n    \"Durgan\",\n    \"Portsmith\",\n    \"Kral\",\n    \"Erack\",\n    \"Glassmoor\",\n    \"Elev\",\n    \"Koat\",\n    \"Kranin\",\n    \"Tanix\",\n    \"Carcastle\",\n    \"Zechan\",\n    \"Janford\",\n    \"Wildehill\",\n    \"Vundan\",\n    \"Tettlewick\",\n    \"Bakun\",\n    \"Paldar\",\n    \"Norville\",\n    \"Mizim\",\n    \"Pineland\",\n    \"Vear\",\n    \"Adeasa\"\n];\nconst $1a6cd9663479e45c$export$f11851f788d38c96 = [\n    \"Strin\",\n    \"Streka\",\n    \"Ugrark\",\n    \"Vrodnard\",\n    \"Roseiron\",\n    \"Daka\",\n    \"Srodon\",\n    \"Vlando\",\n    \"Upul\",\n    \"Xurg\",\n    \"Olkburg\",\n    \"Goit\",\n    \"Drespus\"\n];\nconst $1a6cd9663479e45c$export$50e3bd503f4a0176 = [\n    \"Valora\",\n    \"Eldhrim\",\n    \"Fjallborg\",\n    \"Njordheim\",\n    \"Runestad\"\n];\nconst $1a6cd9663479e45c$export$b0f4ba35f291a431 = [\n    \"Norvayne\",\n    \"Valharm\",\n    \"Marvyn\",\n    \"Solhaven\",\n    \"Elden\",\n    \"Stornholm\",\n    \"Havenbrook\"\n];\nconst $1a6cd9663479e45c$export$8bda5276ea496e31 = [\n    ...$1a6cd9663479e45c$export$6d129767a7753f41,\n    ...$1a6cd9663479e45c$export$f11851f788d38c96,\n    ...$1a6cd9663479e45c$export$50e3bd503f4a0176,\n    ...$1a6cd9663479e45c$export$b0f4ba35f291a431\n];\nconst $1a6cd9663479e45c$export$352db2b91e118a7d = [\n    \"SQL Injection via login form bypass (CVE-2024-10001)\",\n    \"Remote code execution in API endpoint (CVE-2024-10002)\",\n    \"Privilege escalation via kernel flaw (CVE-2024-10003)\",\n    \"Heap overflow in image parsing library (CVE-2024-10004)\",\n    \"Arbitrary file read in config file parser (CVE-2024-10005)\",\n    \"Bypass authentication via session fixation (CVE-2024-10006)\",\n    \"Command injection in web shell upload (CVE-2024-10007)\",\n    \"SSRF attack leaking internal resources (CVE-2024-10008)\",\n    \"Race condition in user privilege assignment (CVE-2024-10009)\",\n    \"Buffer overflow in XML parser (CVE-2024-10010)\",\n    \"Deserialization attack in web API (CVE-2024-10011)\",\n    \"Unrestricted file upload leads to RCE (CVE-2024-10012)\",\n    \"Stored XSS in profile image metadata (CVE-2024-10013)\",\n    \"Path traversal allows arbitrary file deletion (CVE-2024-10014)\",\n    \"Memory corruption via malformed network packets (CVE-2024-10015)\",\n    \"Clickjacking on financial transaction page (CVE-2024-10016)\",\n    \"DNS rebinding attack exposing local services (CVE-2024-10017)\",\n    \"IDOR vulnerability exposing customer invoices (CVE-2024-10018)\",\n    \"Unprotected admin panel accessible via parameter tampering (CVE-2024-10019)\",\n    \"Zero-day exploit in mobile authentication flow (CVE-2024-10020)\"\n];\nconst $1a6cd9663479e45c$export$8354cedaae604bb1 = [\n    \"Fake invoice email impersonating Microsoft\",\n    \"CEO fraud email requesting urgent wire transfer\",\n    \"Phishing site mimicking bank login page\",\n    \"Malicious PDF attachment delivering credential harvester\",\n    \"Voice phishing call pretending to be IT support\",\n    \"Gift card scam targeting HR department\",\n    \"Spear phishing email with malware-laden job offer\",\n    \"Fake security alert redirecting to credential-stealing site\",\n    \"Lookalike domain tricking employees into login submission\",\n    \"Smishing campaign using fake delivery notifications\",\n    \"Compromised supplier email requesting payment changes\",\n    \"Social engineering attack posing as a government agency\",\n    \"Malicious QR code leading to credential theft\",\n    \"Compromised cloud storage link spreading malware\",\n    \"AI-generated deepfake video call impersonating executive\",\n    \"Subscription renewal scam harvesting credit card details\",\n    \"Fake LinkedIn job invitation leading to credential theft\",\n    \"Email spoofing attack impersonating internal IT team\",\n    \"Survey scam collecting personal data for identity theft\",\n    \"Fake tech support popup prompting remote access installation\"\n];\nconst $1a6cd9663479e45c$export$6a10ae954fe99936 = [\n    \"Ransomware encrypting company files with AES-256\",\n    \"Trojan disguised as a banking application\",\n    \"Spyware capturing keystrokes and screenshots\",\n    \"Worm propagating via SMB protocol exploitation\",\n    \"Rootkit embedding itself into system kernel\",\n    \"Malvertising campaign injecting drive-by malware\",\n    \"Botnet infection launching DDoS attacks\",\n    \"Crypto-mining malware draining CPU resources\",\n    \"Fileless malware executing in system memory\",\n    \"Backdoor allowing persistent attacker access\",\n    \"Polymorphic virus evading signature-based detection\",\n    \"Trojanized software update distributing malicious payload\",\n    \"Stealer malware exfiltrating stored passwords\",\n    \"Keylogger capturing credentials from online forms\",\n    \"Logic bomb triggered after specific employee termination\",\n    \"Adware injecting unwanted browser extensions\",\n    \"USB drop attack deploying remote access trojan\",\n    \"Supply chain attack inserting malware into firmware updates\",\n    \"Rogue antivirus software scamming users with fake threats\",\n    \"Hidden RAT (Remote Access Trojan) granting full system control\"\n];\nconst $1a6cd9663479e45c$export$af308143cc80ecd1 = [\n    $1a6cd9663479e45c$export$352db2b91e118a7d,\n    $1a6cd9663479e45c$export$8354cedaae604bb1,\n    $1a6cd9663479e45c$export$6a10ae954fe99936\n];\nconst $1a6cd9663479e45c$export$e6903a0a05ffe5f9 = [\n    {\n        TS: 1746092767731,\n        begin: \"crimsonia\",\n        end: \"bt02\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092769731,\n        begin: \"crimsonia\",\n        end: \"bt04\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092772731,\n        begin: \"crimsonia\",\n        end: \"bt12\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092782731,\n        begin: \"crimsonia\",\n        end: \"bt01\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092785731,\n        begin: \"crimsonia\",\n        end: \"bt06\",\n        target: \"power plant\"\n    },\n    {\n        TS: 1746092788731,\n        begin: \"crimsonia\",\n        end: \"bt10\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092791731,\n        begin: \"crimsonia\",\n        end: \"bt15\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092794731,\n        begin: \"crimsonia\",\n        end: \"bt02\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092797731,\n        begin: \"crimsonia\",\n        end: \"bt17\",\n        target: \"power plant\"\n    },\n    {\n        TS: 1746092800731,\n        begin: \"crimsonia\",\n        end: \"bt16\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092803731,\n        begin: \"crimsonia\",\n        end: \"bt12\",\n        target: \"power plant\"\n    },\n    {\n        TS: 1746092806731,\n        begin: \"crimsonia\",\n        end: \"bt11\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092809731,\n        begin: \"crimsonia\",\n        end: \"bt05\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092812731,\n        begin: \"crimsonia\",\n        end: \"bt12\",\n        target: \"power plant\"\n    },\n    {\n        TS: 1746092827731,\n        begin: \"crimsonia\",\n        end: \"bt01\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092830731,\n        begin: \"crimsonia\",\n        end: \"bt06\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092833731,\n        begin: \"crimsonia\",\n        end: \"bt10\",\n        target: \"power plant\"\n    },\n    {\n        TS: 1746092836731,\n        begin: \"crimsonia\",\n        end: \"bt15\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092839731,\n        begin: \"crimsonia\",\n        end: \"bt02\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092842731,\n        begin: \"crimsonia\",\n        end: \"bt17\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092845731,\n        begin: \"crimsonia\",\n        end: \"bt16\",\n        target: \"power plant\"\n    },\n    {\n        TS: 1746092848731,\n        begin: \"crimsonia\",\n        end: \"bt12\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092851731,\n        begin: \"crimsonia\",\n        end: \"bt02\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092854731,\n        begin: \"crimsonia\",\n        end: \"bt17\",\n        target: \"power plant\"\n    },\n    {\n        TS: 1746092857731,\n        begin: \"crimsonia\",\n        end: \"bt16\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092860731,\n        begin: \"crimsonia\",\n        end: \"bt12\",\n        target: \"power plant\"\n    },\n    {\n        TS: 1746092863731,\n        begin: \"crimsonia\",\n        end: \"bt11\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092875731,\n        begin: \"crimsonia\",\n        end: \"bt05\",\n        target: \"power plant\"\n    },\n    {\n        TS: 1746092878731,\n        begin: \"crimsonia\",\n        end: \"bt12\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092880731,\n        begin: \"crimsonia\",\n        end: \"bt01\",\n        target: \"power plant\"\n    },\n    {\n        TS: 1746092882731,\n        begin: \"crimsonia\",\n        end: \"bt06\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092884731,\n        begin: \"crimsonia\",\n        end: \"bt10\",\n        target: \"satellite\"\n    },\n    {\n        TS: 1746092886731,\n        begin: \"crimsonia\",\n        end: \"bt15\",\n        target: \"satellite\"\n    }\n];\n\n\n\"use strict\";\nconst $f5620d64d1503ddb$export$49795bc7a9001560 = 4000; //minimum time between same signal command\nconst $f5620d64d1503ddb$export$de42b54979daa66a = 30000;\nconst $f5620d64d1503ddb$export$c3ba5e915c9bfd58 = 2500;\n\n\nclass $19f3c469475076c6$var$API {\n    constructor(){\n        this.db_url = \"http://20.39.193.222:5000\";\n    }\n    async getData(team) {\n        try {\n            const response = await fetch(`${this.db_url}/data?team=${team}`);\n            if (!response.ok) throw new Error(`Error: ${response.status}`);\n            return await response.json();\n        } catch (error) {\n            console.error(error);\n            return null;\n        }\n    }\n    async deleteField(team, field) {\n        try {\n            const response = await fetch(`${this.db_url}/data/delete`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    team: team,\n                    field: field\n                })\n            });\n            const result = await response.json();\n            if (!response.ok) throw new Error(result.error);\n            console.log(`Success: ${result.message}`);\n            return true;\n        } catch (error) {\n            console.error(error);\n            return false;\n        }\n    }\n}\nvar $19f3c469475076c6$export$2e2bcd8739ae039 = $19f3c469475076c6$var$API;\n\n\n\"use strict\";\n///CONFIG///\nlet $efd3ba4ec2608b1d$var$isTabActive = true;\n/* let activeSignals = [\r\n  \"path_001\" \r\n];   */ let $efd3ba4ec2608b1d$var$stoppedSignals = [];\nlet $efd3ba4ec2608b1d$var$pathIdCount = 1; // naming new paths as path_001 etc\nlet $efd3ba4ec2608b1d$var$latestPath;\nlet $efd3ba4ec2608b1d$var$mapSvg;\nlet $efd3ba4ec2608b1d$var$animationSvg;\nlet $efd3ba4ec2608b1d$var$gapInRealAttacks = 0;\nconst $efd3ba4ec2608b1d$var$map = function() {\n    // only after map exists\n    $efd3ba4ec2608b1d$var$mapSvg = document.getElementById(\"map\");\n};\nconst $efd3ba4ec2608b1d$var$animation = function() {\n    $efd3ba4ec2608b1d$var$animationSvg = document.getElementById(\"animationSVG\");\n};\n//NAME PATHS by type \"path\", \"circle\"\nconst $efd3ba4ec2608b1d$var$pathName = function(type) {\n    return `${type}_${String($efd3ba4ec2608b1d$var$pathIdCount).padStart(1, \"0\")}`;\n};\n///////// MAKE PATH ////////////\nconst $efd3ba4ec2608b1d$var$makePath = function(x1, y1, x2, y2, color = 1, bend = 0, animate = 1) {\n    const xhalf = (x2 - x1) / 2;\n    const yhalf = (y2 - y1) / 2;\n    const xbend = xhalf - bend * yhalf;\n    const ybend = yhalf + bend * xhalf;\n    let direction;\n    if (Math.abs(xhalf) >= Math.abs(yhalf)) xhalf > 0 ? direction = `right${color}` : direction = `left${color}`;\n    else yhalf > 0 ? direction = `down${color}` : direction = `up${color}`;\n    document.querySelector(\"#animationSVG\").insertAdjacentHTML(\"afterbegin\", ` <path\n          id=${$efd3ba4ec2608b1d$var$pathName(\"path\")}\n          class=${direction /*  + (Math.floor(Math.random() * 5) + 1) */ } \n          d=\"m${x1},${y1}s${xbend},${ybend},${x2 - x1},${y2 - y1}\"\n        />\n        <circle id=${$efd3ba4ec2608b1d$var$pathName(\"circle\")} class=\"circle${color}\" cx=\"${x2}\" cy=\"${y2}\" />\n`);\n    //animate = 1 ? activeSignals.push(pathName(\"path\")) : \"\";\n    $efd3ba4ec2608b1d$var$latestPath = $efd3ba4ec2608b1d$var$pathName(\"path\");\n    $efd3ba4ec2608b1d$var$pathIdCount++;\n};\nconst $efd3ba4ec2608b1d$var$getCoordsById = function(id) {\n    const bbox1 = document.getElementById(id).getBBox();\n    const centerX1 = bbox1.x + bbox1.width / 2;\n    const centerY1 = bbox1.y + bbox1.height / 2;\n    const center = [\n        centerX1,\n        centerY1\n    ];\n    return center;\n};\n////////////////// PATH by ID //////////////////\n//makes paths from object to object - uses makePath//\nconst $efd3ba4ec2608b1d$var$makePathByID = function(id1, id2, color, bend = (0, $86ac46d6b1918ed8$export$40532d2a8b2a1d98)(1)) {\n    $efd3ba4ec2608b1d$var$makePath($efd3ba4ec2608b1d$var$getCoordsById(id1)[0], $efd3ba4ec2608b1d$var$getCoordsById(id1)[1], $efd3ba4ec2608b1d$var$getCoordsById(id2)[0], $efd3ba4ec2608b1d$var$getCoordsById(id2)[1], color, bend);\n};\nconst $efd3ba4ec2608b1d$var$removePath = function(pathID) {\n    $efd3ba4ec2608b1d$var$animationSvg.removeChild(document.getElementById(pathID));\n};\n/////// CLICK MAKE PATH /////// - uses makePath\nlet $efd3ba4ec2608b1d$var$clickX;\nlet $efd3ba4ec2608b1d$var$clickY;\nlet $efd3ba4ec2608b1d$var$clickNum = 0;\nlet $efd3ba4ec2608b1d$var$svgX;\nlet $efd3ba4ec2608b1d$var$svgY;\nconst $efd3ba4ec2608b1d$var$mapClick = function() {\n    // its function because the need for await\n    $efd3ba4ec2608b1d$var$mapSvg.addEventListener(\"click\", function(event) {\n        let matrix = $efd3ba4ec2608b1d$var$mapSvg.getScreenCTM().inverse(); // Get inverse transform matrix\n        $efd3ba4ec2608b1d$var$svgX = matrix.a * event.clientX + matrix.e;\n        $efd3ba4ec2608b1d$var$svgY = matrix.d * event.clientY + matrix.f;\n        $efd3ba4ec2608b1d$var$clickNum++;\n        if ($efd3ba4ec2608b1d$var$clickNum === 2) {\n            $efd3ba4ec2608b1d$var$makePath($efd3ba4ec2608b1d$var$clickX, $efd3ba4ec2608b1d$var$clickY, $efd3ba4ec2608b1d$var$svgX, $efd3ba4ec2608b1d$var$svgY, (0, $86ac46d6b1918ed8$export$3c5f89dae98e900b)(2), (Math.random() - 0.5) * 4);\n            $efd3ba4ec2608b1d$var$signal($efd3ba4ec2608b1d$var$latestPath);\n            $efd3ba4ec2608b1d$var$clickNum = 0;\n        }\n        $efd3ba4ec2608b1d$var$clickX = $efd3ba4ec2608b1d$var$svgX;\n        $efd3ba4ec2608b1d$var$clickY = $efd3ba4ec2608b1d$var$svgY;\n        console.log(\"Mouse clicked at:\", $efd3ba4ec2608b1d$var$svgX, $efd3ba4ec2608b1d$var$svgY);\n    //randomSignal(latestPath);\n    });\n};\n//// SIGNAL //// Function that creates line and circular explosion signal after\nconst $efd3ba4ec2608b1d$var$signal = function(pathName, circle = 1, durationMod = 1) {\n    let timeline = anime.timeline({\n        loop: false,\n        direction: \"normal\"\n    });\n    const svgPath = document.querySelector(`#${pathName}`);\n    var pathLength = svgPath.getTotalLength();\n    svgPath.style.visibility = \"visible\";\n    timeline.add({\n        targets: svgPath,\n        strokeDashoffset: [\n            anime.setDashoffset,\n            -pathLength\n        ],\n        easing: \"easeInOutSine\",\n        duration: (0, $f5620d64d1503ddb$export$c3ba5e915c9bfd58) * durationMod,\n        delay: 0\n    });\n    if (circle === 1) // circle is created at the end of path\n    timeline.add({\n        targets: `#${pathName.replace(\"path\", \"circle\")}`,\n        opacity: 1,\n        scale: [\n            0,\n            20,\n            0\n        ],\n        duration: 1200,\n        //direction: \"alternate\", // Alternate between scaling up and down\n        easing: \"easeOutSine\"\n    }, `-=${(0, $f5620d64d1503ddb$export$c3ba5e915c9bfd58) * durationMod * 0.6}`);\n    if (circle === 2) //predrawn circle animates at the end of the path\n    timeline.add({\n        targets: `#${pathName}_circle`,\n        opacity: 1,\n        scale: [\n            0,\n            20,\n            0\n        ],\n        duration: 1200,\n        //direction: \"alternate\", // Alternate between scaling up and down\n        easing: \"easeOutSine\"\n    }, `-=${(0, $f5620d64d1503ddb$export$c3ba5e915c9bfd58) * durationMod * 0.6}`);\n};\n//It restarts signals once tab is visible\n//Only signals in stopped Signlas list\ndocument.addEventListener(\"visibilitychange\", ()=>{\n    $efd3ba4ec2608b1d$var$isTabActive = !document.hidden;\n    if ($efd3ba4ec2608b1d$var$isTabActive) {\n        $efd3ba4ec2608b1d$var$pathIdCount = 1;\n        //timeBetween = 0; //remove delay that is between repeating signals\n        $efd3ba4ec2608b1d$var$stoppedSignals.forEach((param)=>{\n            $efd3ba4ec2608b1d$var$randomSignal(param[0], param[1], param[2], param[3], param[4], param[5], param[6]);\n        });\n        $efd3ba4ec2608b1d$var$stoppedSignals = [];\n    }\n});\n////// RANDOM SIGNAL ////////\n//makes signal appear at intervals\nconst $efd3ba4ec2608b1d$var$randomTime = function(max) {\n    return Math.floor(Math.random() * max);\n};\n/* const makeRandomInterval = function () {\r\n  return randomTime(setRandomInterval);\r\n}; */ const $efd3ba4ec2608b1d$var$randomSignal = function(id1, id2, color = (0, $86ac46d6b1918ed8$export$3c5f89dae98e900b)(3), bend = 1, interval = (0, $f5620d64d1503ddb$export$de42b54979daa66a), durationMod = 1 //how fast animation happens\n) {\n    let lastTime = Date.now();\n    let randomInterval = $efd3ba4ec2608b1d$var$randomTime(interval);\n    //console.log(randomInterval);\n    let timeCounter = 0;\n    let timeBetween = 0;\n    let pathName;\n    let city1 = id1;\n    let city2 = id2;\n    let interval1 = setInterval(()=>{\n        /*  console.log(`timebetween on  ${timeBetween}`);\r\n    console.log(randomInterval + timeBetween);\r\n    console.log(`timeleft ${Date.now() - lastTime}`); */ if (!$efd3ba4ec2608b1d$var$isTabActive) {\n            clearInterval(interval1);\n            //console.log(\"stop\"); // clears interval after tab hidden\n            $efd3ba4ec2608b1d$var$stoppedSignals.push([\n                id1,\n                id2,\n                color,\n                bend,\n                interval,\n                durationMod\n            ]); // adds signals to stoppedSignals array for later restart\n            //removePath(pathName);\n            //removePath(`#${pathName.replace(\"path\", \"circle\")}`);\n            //console.log(stoppedSignals);\n            return;\n        }\n        /*     if (gapInRealAttacks === 1 && stoppedSignals.length > 0) {\r\n      isTabActive = !document.hidden;\r\n      if (isTabActive) {\r\n        pathIdCount = 1;\r\n        //timeBetween = 0; //remove delay that is between repeating signals\r\n        stoppedSignals.forEach((param) => {\r\n          randomSignal(\r\n            param[0],\r\n            param[1],\r\n            param[2],\r\n            param[3],\r\n            param[4],\r\n            param[5],\r\n            param[6]\r\n          );\r\n        });\r\n        stoppedSignals = [];\r\n      }\r\n    } */ if (Date.now() > lastTime + randomInterval + timeBetween) {\n            // timebetween is 0 at the very start\n            lastTime = Date.now();\n            timeBetween = (0, $f5620d64d1503ddb$export$49795bc7a9001560);\n            randomInterval = $efd3ba4ec2608b1d$var$randomTime(interval) + (0, $f5620d64d1503ddb$export$c3ba5e915c9bfd58) * durationMod; //new random time\n            //console.log(randomInterval);\n            let city1 = id1;\n            let city2 = id2;\n            if ((0, $1a6cd9663479e45c$export$e5ad74579c86b003).includes(id1)) {\n                // if id is named after country name(from array) then it will be random city from that country each time attack is run\n                city1 = $efd3ba4ec2608b1d$var$randomCity(id1);\n                while(city1 === \"West_Point\")city1 = $efd3ba4ec2608b1d$var$randomCity(id1);\n            }\n            if ((0, $1a6cd9663479e45c$export$e5ad74579c86b003).includes(id2)) city2 = $efd3ba4ec2608b1d$var$randomCity(id2);\n            if (city2 !== 0 && $efd3ba4ec2608b1d$var$gapInRealAttacks === 1) {\n                // some predrawn attacks have id2=0\n                $efd3ba4ec2608b1d$var$attack(city1, city2, color, bend); //business as usual;\n                if ((0, $1a6cd9663479e45c$export$e5ad74579c86b003).includes(id2) && (0, $86ac46d6b1918ed8$export$3c5f89dae98e900b)(8) === 8) //sometimes attacks spread inside target country\n                setTimeout(()=>{\n                    for(let i = 0; i < (0, $86ac46d6b1918ed8$export$3c5f89dae98e900b)(2) + 1; i++)$efd3ba4ec2608b1d$var$attack(city2, $efd3ba4ec2608b1d$var$randomCity(id2), color, bend, 0);\n                }, (0, $f5620d64d1503ddb$export$c3ba5e915c9bfd58) * durationMod - 1500);\n            } else if ($efd3ba4ec2608b1d$var$gapInRealAttacks === 1) {\n                // predrawn paths\n                const element = document.getElementById(id1);\n                const circle = document.getElementById(`${id1}_circle`);\n                element.classList.remove(...element.classList); // empty classlist of path\n                if (circle) {\n                    circle.classList.remove(...circle.classList);\n                    circle.classList.add(`circle${color}`);\n                    circle.removeAttribute(\"r\");\n                }\n                element.classList.add(`up${color}`); // if layer ID ends with _w there will be no circle at the end of the path, but water splash\n                if (id1.slice(-2) == \"_w\") {\n                    $efd3ba4ec2608b1d$var$showLabel(\"West_Point\", 10, 1000, 7, -25, \"West Point\");\n                    $efd3ba4ec2608b1d$var$signal(id1, 0, durationMod);\n                    const splash = 50;\n                    ///\n                    setTimeout(()=>{\n                        document.querySelector(\"#animationSVG\").insertAdjacentHTML(\"afterbegin\", ` <image class=\"splash\" width=\"${splash}px\" x=\"${$efd3ba4ec2608b1d$var$getCoordsById(`${city1}_circle`)[0] - splash * 0.47}\" y=\"${$efd3ba4ec2608b1d$var$getCoordsById(`${city1}_circle`)[1] - splash * 0.7}\" href=./SVG/splash.gif>\n          `);\n                        setTimeout(()=>{\n                            if (document.querySelector(\".splash\")) $efd3ba4ec2608b1d$var$animationSvg.removeChild(document.querySelector(\".splash\"));\n                        }, 1000);\n                    }, (0, $f5620d64d1503ddb$export$c3ba5e915c9bfd58) * durationMod * 0.5);\n                    $efd3ba4ec2608b1d$var$attackLog(color, (0, $1a6cd9663479e45c$export$af308143cc80ecd1)[color - 1][(0, $86ac46d6b1918ed8$export$3c5f89dae98e900b)((0, $1a6cd9663479e45c$export$af308143cc80ecd1)[0].length) - 1], \"West Point\", \"...\");\n                } else {\n                    $efd3ba4ec2608b1d$var$attackLog(color, (0, $1a6cd9663479e45c$export$af308143cc80ecd1)[color - 1][(0, $86ac46d6b1918ed8$export$3c5f89dae98e900b)((0, $1a6cd9663479e45c$export$af308143cc80ecd1)[0].length) - 1], \"West Point\", \"West Point\");\n                    $efd3ba4ec2608b1d$var$showLabel(\"West_Point\", 10, 1000, 7, -25, \"West Point\");\n                    $efd3ba4ec2608b1d$var$signal(id1, 2, durationMod);\n                } // second parameter must be 2 if it is predrawn path;\n            } // if second id is 0 it wont be animation between two ID-s, but one pre-drawn line.\n        }\n    }, 100);\n};\nconst $efd3ba4ec2608b1d$var$showLabel = function(id, appear = 10, fadeAway = 2000, xoffset = 3, yoffset = -10, customID) {\n    const who = (0, $1a6cd9663479e45c$export$f11851f788d38c96).includes(id) || id === \"West_Point\" ? \"attacker\" : \"attacked\";\n    let labelText;\n    if (customID) labelText = customID;\n    else if (id.toLowerCase().startsWith(\"bt\")) labelText = id.toUpperCase().replace(/([A-Z]+)(\\d+)/, \"$1 $2\");\n    else labelText = id;\n    setTimeout(()=>{\n        document.querySelector(\"#animationSVG\").insertAdjacentHTML(\"afterbegin\", ` <text class=${who} x=\"${$efd3ba4ec2608b1d$var$getCoordsById(id)[0] + xoffset}\" y=\"${$efd3ba4ec2608b1d$var$getCoordsById(id)[1] - yoffset}\">${labelText}</text>\n`);\n        const textElement = document.querySelector(`.${who}`);\n        setTimeout(()=>{\n            if (textElement) textElement.classList.add(\"fadeout\");\n        }, fadeAway);\n        setTimeout(()=>{\n            if (textElement) textElement.remove();\n        }, 5000);\n    }, appear);\n};\nconst $efd3ba4ec2608b1d$var$attack = function(id1, id2, color, bend = 1, log = 1) {\n    $efd3ba4ec2608b1d$var$makePathByID(id1, id2, color, (0, $86ac46d6b1918ed8$export$40532d2a8b2a1d98)(bend));\n    //console.log(\"Created \" + latestPath);\n    const element = document.querySelector(`#${id1}`);\n    element.classList.add(\"ease\", \"start-glow\");\n    setTimeout(()=>{\n        element.classList.toggle(\"start-glow\");\n    }, 400);\n    $efd3ba4ec2608b1d$var$signal($efd3ba4ec2608b1d$var$latestPath);\n    if (log === 1) $efd3ba4ec2608b1d$var$showLabel(id1, 10, 1000, 7, -25);\n    $efd3ba4ec2608b1d$var$showLabel(id2, 1000, 2000, 5, 5);\n    if (log === 1) $efd3ba4ec2608b1d$var$attackLog(color, (0, $1a6cd9663479e45c$export$af308143cc80ecd1)[color - 1][(0, $86ac46d6b1918ed8$export$3c5f89dae98e900b)((0, $1a6cd9663479e45c$export$af308143cc80ecd1)[0].length) - 1], id1, id2);\n    else if (log != 0) $efd3ba4ec2608b1d$var$attackLog(color, log, id1, id2.toUpperCase().replace(/([A-Z]+)(\\d+)/, \"$1 $2\"));\n    //console.log(\"signalled \" + latestPath);\n    const thislatestPath = $efd3ba4ec2608b1d$var$latestPath;\n    setTimeout(function() {\n        if (document.getElementById(thislatestPath)) $efd3ba4ec2608b1d$var$removePath(thislatestPath);\n        //console.log(latestPath + \" \" + thislatestPath);\n        if (document.getElementById(`${thislatestPath.replace(\"path\", \"circle\")}`)) $efd3ba4ec2608b1d$var$removePath(`${thislatestPath.replace(\"path\", \"circle\")}`);\n    }, (0, $f5620d64d1503ddb$export$c3ba5e915c9bfd58));\n};\n//All animation paths visible from beginning\n/* cssRuleSelector(\".up\", \"visibility\", \"visible\");\r\ncssRuleSelector(\".right\", \"visibility\", \"visible\");\r\ncssRuleSelector(\".left\", \"visibility\", \"visible\");\r\ncssRuleSelector(\".down\", \"visibility\", \"visible\"); */ // function to load main code\n/* const hoverLand = function (){\r\n  const \r\n}\r\n */ const $efd3ba4ec2608b1d$var$landHover = function() {\n    const landSquare = document.getElementById(\"land_square\");\n    //console.log(landSquare.firstElementChild.classList[0]);\n    (0, $86ac46d6b1918ed8$export$bd362de25b6c5ab1)(`.${landSquare.firstElementChild.classList[0]}:hover`, `fill:rgb(35, 177, 243);transition:none;\n    filter: drop-shadow(0 0 5px rgba(0, 255, 255, 1))drop-shadow(0 0 5px rgba(0, 255, 255, 1));`);\n    (0, $86ac46d6b1918ed8$export$bd362de25b6c5ab1)(`.${landSquare.firstElementChild.classList[0]}`, `\n  transition: all 2s ease-out;\n  stroke:red;\n  \n  stroke-width: 2px !important;\n  stroke-opacity:0;\n  pointer-events: stroke;\n\n  `);\n};\nconst $efd3ba4ec2608b1d$var$randomCity = function(attCountry = \"random\") {\n    let city;\n    attCountry === \"berylia\" && (city = (0, $1a6cd9663479e45c$export$6d129767a7753f41)[(0, $86ac46d6b1918ed8$export$3c5f89dae98e900b)((0, $1a6cd9663479e45c$export$6d129767a7753f41).length) - 1]);\n    attCountry === \"crimsonia\" && (city = (0, $1a6cd9663479e45c$export$f11851f788d38c96)[(0, $86ac46d6b1918ed8$export$3c5f89dae98e900b)((0, $1a6cd9663479e45c$export$f11851f788d38c96).length) - 1]);\n    attCountry === \"revalia\" && (city = (0, $1a6cd9663479e45c$export$50e3bd503f4a0176)[(0, $86ac46d6b1918ed8$export$3c5f89dae98e900b)((0, $1a6cd9663479e45c$export$50e3bd503f4a0176).length) - 1]);\n    attCountry === \"netoria\" && (city = (0, $1a6cd9663479e45c$export$b0f4ba35f291a431)[(0, $86ac46d6b1918ed8$export$3c5f89dae98e900b)((0, $1a6cd9663479e45c$export$b0f4ba35f291a431).length) - 1]);\n    attCountry === \"random\" && (city = (0, $1a6cd9663479e45c$export$8bda5276ea496e31)[(0, $86ac46d6b1918ed8$export$3c5f89dae98e900b)((0, $1a6cd9663479e45c$export$8bda5276ea496e31).length) - 1]);\n    return city;\n};\nconst $efd3ba4ec2608b1d$var$attackLog = function(threatLevel = 2, description, attacker, defender) {\n    let klingon = \"log-title\";\n    if (!defender.toLowerCase().startsWith(\"bt\")) (0, $86ac46d6b1918ed8$export$3c5f89dae98e900b)(12) === 12 && (klingon = \"log-title-klingon\");\n    else klingon = \"log-title\";\n    const html = `<div class=\"log-event\">\n  <div class=\"threat-circle-${threatLevel}\"></div>\n      <div class=\"log-content\">\n          <div class=\"${klingon}\"}>${description}\n          </div>\n          <div class=\"log-details\">\n              <div class=\"log-time\"><img src=\"./SVG/clock.svg\" class=\"log-time-icon\">\n              <span class=\"time\">${new Date().toLocaleTimeString(\"en-GB\")}</span></div>\n              <div class=\"log-city\">\n              <span>${attacker}</span></div>\n              <div class=\"log-arrow-${threatLevel}\"></div>\n              <div class=\"log-city\">\n             \n              <span>${defender}</span></div>\n            \n          </div>       \n      </div>\n      </div>`;\n    const elements = document.getElementsByClassName(\"log-event\");\n    const log = document.getElementById(\"log\");\n    elements.length >= 10 && log.removeChild(log.lastElementChild);\n    log.insertAdjacentHTML(\"afterbegin\", html);\n};\n////////////////////////////\n////////// API /////////////\n////////////////////////////\nasync function $efd3ba4ec2608b1d$var$attacksAPI() {\n    let api = new (0, $19f3c469475076c6$export$2e2bcd8739ae039)();\n    let team = \"all\";\n    let datas = await api.getData(team) || {};\n    let events = datas.arrows;\n    let eventNo = 0;\n    $efd3ba4ec2608b1d$var$gapInRealAttacks = 0;\n    /////SETTINGS///\n    let testing = 1; // turn test data from data.js on/off\n    let refreshInterval = 30000; // how often it looks for new data from server\n    let gapSizeToFill = 8000; // Simulated attacks start when gap of this size is detected  between real attacks\n    if (testing === 1) // testData is in data.js\n    events = (0, $1a6cd9663479e45c$export$e6903a0a05ffe5f9);\n    /* events.forEach((data) => {\r\n    data.end = data.end.toUpperCase().replace(/([A-Z]+)(\\d+)/, \"$1 $2\");\r\n  }); */ events.sort((a, b)=>a.TS - b.TS);\n    const makePresent = function() {\n        let timeDiff = Date.now() - events[0].TS;\n        events.forEach((data)=>{\n            data.TS += timeDiff + 2000;\n        });\n    };\n    makePresent();\n    setInterval(()=>{\n        if (Math.abs(events[eventNo].TS - Date.now()) < 300) {\n            $efd3ba4ec2608b1d$var$attack($efd3ba4ec2608b1d$var$randomCity(events[eventNo].begin), events[eventNo].end, 1, 0.7, `Attack on ${events[eventNo].target}`);\n            eventNo++;\n        }\n        if (Math.abs(events[eventNo].TS - Date.now()) > $efd3ba4ec2608b1d$var$gapInRealAttacks) $efd3ba4ec2608b1d$var$gapInRealAttacks = 1;\n        if (Math.abs(events[eventNo].TS - Date.now()) < 1000) $efd3ba4ec2608b1d$var$gapInRealAttacks = 0;\n    }, 400);\n    /*  if (events) {\r\n    // just for seeing log if imported data or testdata\r\n    events.forEach((data) => {\r\n      console.log(data);\r\n    });\r\n  } else {\r\n    console.log(\"No arrows found or data fetch failed.\");\r\n  } */ const refreshData = function(interval = 30000) {\n        //gets the data from the server again\n        setInterval(async ()=>{\n            eventNo = 0;\n            datas = await api.getData(team) || {};\n            events = datas.arrows;\n            await makePresent();\n            events.sort((a, b)=>a.TS - b.TS);\n        }, interval);\n    };\n    refreshData(refreshInterval);\n}\nasync function $efd3ba4ec2608b1d$var$initialize() {\n    try {\n        /////////////ALL GRAPHICAL STUFF//////////////\n        await (0, $86ac46d6b1918ed8$export$c32505ea942c7f01)(\"map\", \"mapContainer\");\n        await $efd3ba4ec2608b1d$var$map(); //defines map svg object as const\n        await $efd3ba4ec2608b1d$var$animation(); //defines animationSVG as const\n        $efd3ba4ec2608b1d$var$landHover(); // cursor hover effect over land\n        $efd3ba4ec2608b1d$var$mapClick(); //eventListener for clicking on map\n        $efd3ba4ec2608b1d$var$attacksAPI();\n        //RANDOM FILLING ATTACKS - active only in gaps of specific lengths//\n        $efd3ba4ec2608b1d$var$randomSignal(\"crimsonia\", \"berylia\", 2, 0.7);\n        $efd3ba4ec2608b1d$var$randomSignal(\"crimsonia\", \"berylia\", 2, 0.7);\n        $efd3ba4ec2608b1d$var$randomSignal(\"crimsonia\", \"berylia\", 2, 0.7, 50000);\n        $efd3ba4ec2608b1d$var$randomSignal(\"crimsonia\", \"berylia\", 2, 0.7, 50000);\n        $efd3ba4ec2608b1d$var$randomSignal(\"crimsonia\", \"berylia\", 2, 0.7, 80000);\n        $efd3ba4ec2608b1d$var$randomSignal(\"crimsonia\", \"berylia\", 2, 0.7, 80000);\n        $efd3ba4ec2608b1d$var$randomSignal(\"crimsonia\", \"netoria\", 2, 0.7);\n        $efd3ba4ec2608b1d$var$randomSignal(\"westPoint1_w\", 0, 2, 1, 600000, 3); //path name, 0 - predrawn path, threat type, bend of the path(when not predrawn),pause between signals (randomly within this number), animation speed modifier\n        $efd3ba4ec2608b1d$var$randomSignal(\"westPoint2_w\", 0, 2, 1, 600000, 3);\n        $efd3ba4ec2608b1d$var$randomSignal(\"westPoint3\", 0, 2, 1, 600000, 2);\n        $efd3ba4ec2608b1d$var$randomSignal(\"westPoint4\", 0, 2, 1, 600000, 2);\n    //activeSignals.forEach(randomSignal);\n    //////////////////////////////////////////////// */\n    } catch (error) {\n        console.error(\"Initialization failed:\", error);\n    }\n}\n//load main code above\ndocument.addEventListener(\"DOMContentLoaded\", $efd3ba4ec2608b1d$var$initialize);\n\n\n//# sourceMappingURL=CyberAttacks.b25a9ec0.js.map\n","\"use strict\";\r\nimport {\r\n  loadSVG,\r\n  randomInt,\r\n  bendRandom,\r\n  getRandomRGB,\r\n  addCSS,\r\n  cssRuleSelector,\r\n} from \"./support.js\";\r\n\r\nimport {\r\n  citiesBerylia,\r\n  citiesCrimsonia,\r\n  citiesRevalia,\r\n  citiesNetoria,\r\n  countries,\r\n  cities,\r\n  attackDesc,\r\n  descLvl1,\r\n  descLvl2,\r\n  descLvl3,\r\n  testData,\r\n} from \"./data.js\";\r\n\r\nimport {\r\n  setTimeBetween,\r\n  setRandomInterval,\r\n  signalDuration,\r\n} from \"./settings.js\";\r\n\r\nimport API from \"./api.js\";\r\n\r\n///CONFIG///\r\n\r\nlet isTabActive = true;\r\n/* let activeSignals = [\r\n  \"path_001\" \r\n];   */\r\nlet stoppedSignals = [];\r\nlet pathIdCount = 1; // naming new paths as path_001 etc\r\nlet latestPath;\r\nlet mapSvg;\r\nlet animationSvg;\r\nlet gapInRealAttacks = 0;\r\n\r\nconst map = function () {\r\n  // only after map exists\r\n  mapSvg = document.getElementById(\"map\");\r\n};\r\n\r\nconst animation = function () {\r\n  animationSvg = document.getElementById(\"animationSVG\");\r\n};\r\n\r\n//NAME PATHS by type \"path\", \"circle\"\r\nconst pathName = function (type) {\r\n  return `${type}_${String(pathIdCount).padStart(1, \"0\")}`;\r\n};\r\n\r\n///////// MAKE PATH ////////////\r\n\r\nconst makePath = function (x1, y1, x2, y2, color = 1, bend = 0, animate = 1) {\r\n  const xhalf = (x2 - x1) / 2;\r\n  const yhalf = (y2 - y1) / 2;\r\n  const xbend = xhalf - bend * yhalf;\r\n  const ybend = yhalf + bend * xhalf;\r\n\r\n  let direction;\r\n  if (Math.abs(xhalf) >= Math.abs(yhalf)) {\r\n    xhalf > 0 ? (direction = `right${color}`) : (direction = `left${color}`);\r\n  } else {\r\n    yhalf > 0 ? (direction = `down${color}`) : (direction = `up${color}`);\r\n  }\r\n\r\n  document.querySelector(\"#animationSVG\").insertAdjacentHTML(\r\n    \"afterbegin\",\r\n    ` <path\r\n          id=${pathName(\"path\")}\r\n          class=${direction /*  + (Math.floor(Math.random() * 5) + 1) */} \r\n          d=\"m${x1},${y1}s${xbend},${ybend},${x2 - x1},${y2 - y1}\"\r\n        />\r\n        <circle id=${pathName(\r\n          \"circle\"\r\n        )} class=\"circle${color}\" cx=\"${x2}\" cy=\"${y2}\" />\r\n`\r\n  );\r\n\r\n  //animate = 1 ? activeSignals.push(pathName(\"path\")) : \"\";\r\n  latestPath = pathName(\"path\");\r\n  pathIdCount++;\r\n};\r\n\r\nconst getCoordsById = function (id) {\r\n  const bbox1 = document.getElementById(id).getBBox();\r\n  const centerX1 = bbox1.x + bbox1.width / 2;\r\n  const centerY1 = bbox1.y + bbox1.height / 2;\r\n  const center = [centerX1, centerY1];\r\n  return center;\r\n};\r\n////////////////// PATH by ID //////////////////\r\n//makes paths from object to object - uses makePath//\r\nconst makePathByID = function (id1, id2, color, bend = bendRandom(1)) {\r\n  makePath(\r\n    getCoordsById(id1)[0],\r\n    getCoordsById(id1)[1],\r\n    getCoordsById(id2)[0],\r\n    getCoordsById(id2)[1],\r\n    color,\r\n    bend\r\n  );\r\n};\r\nconst removePath = function (pathID) {\r\n  animationSvg.removeChild(document.getElementById(pathID));\r\n};\r\n/////// CLICK MAKE PATH /////// - uses makePath\r\nlet clickX;\r\nlet clickY;\r\nlet clickNum = 0;\r\nlet svgX;\r\nlet svgY;\r\n\r\nconst mapClick = function () {\r\n  // its function because the need for await\r\n\r\n  mapSvg.addEventListener(\"click\", function (event) {\r\n    let matrix = mapSvg.getScreenCTM().inverse(); // Get inverse transform matrix\r\n    svgX = matrix.a * event.clientX + matrix.e;\r\n    svgY = matrix.d * event.clientY + matrix.f;\r\n    clickNum++;\r\n\r\n    if (clickNum === 2) {\r\n      makePath(\r\n        clickX,\r\n        clickY,\r\n        svgX,\r\n        svgY,\r\n        randomInt(2),\r\n        (Math.random() - 0.5) * 4\r\n      );\r\n      signal(latestPath);\r\n      clickNum = 0;\r\n    }\r\n    clickX = svgX;\r\n    clickY = svgY;\r\n    console.log(\"Mouse clicked at:\", svgX, svgY);\r\n\r\n    //randomSignal(latestPath);\r\n  });\r\n};\r\n\r\n//// SIGNAL //// Function that creates line and circular explosion signal after\r\nconst signal = function (pathName, circle = 1, durationMod = 1) {\r\n  let timeline = anime.timeline({\r\n    loop: false,\r\n    direction: \"normal\",\r\n  });\r\n  const svgPath = document.querySelector(`#${pathName}`);\r\n  var pathLength = svgPath.getTotalLength();\r\n  svgPath.style.visibility = \"visible\";\r\n  timeline.add({\r\n    targets: svgPath,\r\n    strokeDashoffset: [anime.setDashoffset, -pathLength],\r\n    easing: \"easeInOutSine\",\r\n    duration: signalDuration * durationMod,\r\n    delay: 0,\r\n  });\r\n  if (circle === 1) {\r\n    // circle is created at the end of path\r\n    timeline.add(\r\n      {\r\n        targets: `#${pathName.replace(\"path\", \"circle\")}`, // animates circle_ with same suffix as path\r\n        opacity: 1,\r\n        scale: [0, 20, 0], // Animate from 1 to 20 and back to 1\r\n        duration: 1200, // Duration for each animation cycle\r\n        //direction: \"alternate\", // Alternate between scaling up and down\r\n        easing: \"easeOutSine\",\r\n      },\r\n      `-=${signalDuration * durationMod * 0.6}`\r\n    );\r\n  }\r\n  if (circle === 2) {\r\n    //predrawn circle animates at the end of the path\r\n    timeline.add(\r\n      {\r\n        targets: `#${pathName}_circle`, // animates circle_ with same suffix as path\r\n        opacity: 1,\r\n        scale: [0, 20, 0], // Animate from 1 to 20 and back to 1\r\n        duration: 1200, // Duration for each animation cycle\r\n        //direction: \"alternate\", // Alternate between scaling up and down\r\n        easing: \"easeOutSine\",\r\n      },\r\n      `-=${signalDuration * durationMod * 0.6}`\r\n    );\r\n  }\r\n};\r\n\r\n//It restarts signals once tab is visible\r\n//Only signals in stopped Signlas list\r\n\r\ndocument.addEventListener(\"visibilitychange\", () => {\r\n  isTabActive = !document.hidden;\r\n  if (isTabActive) {\r\n    pathIdCount = 1;\r\n    //timeBetween = 0; //remove delay that is between repeating signals\r\n    stoppedSignals.forEach((param) => {\r\n      randomSignal(\r\n        param[0],\r\n        param[1],\r\n        param[2],\r\n        param[3],\r\n        param[4],\r\n        param[5],\r\n        param[6]\r\n      );\r\n    });\r\n    stoppedSignals = [];\r\n  }\r\n});\r\n\r\n////// RANDOM SIGNAL ////////\r\n//makes signal appear at intervals\r\nconst randomTime = function (max) {\r\n  return Math.floor(Math.random() * max);\r\n};\r\n/* const makeRandomInterval = function () {\r\n  return randomTime(setRandomInterval);\r\n}; */\r\n\r\nconst randomSignal = function (\r\n  id1,\r\n  id2,\r\n  color = randomInt(3),\r\n  bend = 1,\r\n  interval = setRandomInterval,\r\n  durationMod = 1 //how fast animation happens\r\n) {\r\n  let lastTime = Date.now();\r\n  let randomInterval = randomTime(interval);\r\n  //console.log(randomInterval);\r\n  let timeCounter = 0;\r\n  let timeBetween = 0;\r\n  let pathName;\r\n  let city1 = id1;\r\n  let city2 = id2;\r\n  let interval1 = setInterval(() => {\r\n    /*  console.log(`timebetween on  ${timeBetween}`);\r\n    console.log(randomInterval + timeBetween);\r\n    console.log(`timeleft ${Date.now() - lastTime}`); */\r\n    if (!isTabActive) {\r\n      clearInterval(interval1);\r\n      //console.log(\"stop\"); // clears interval after tab hidden\r\n      stoppedSignals.push([id1, id2, color, bend, interval, durationMod]); // adds signals to stoppedSignals array for later restart\r\n      //removePath(pathName);\r\n      //removePath(`#${pathName.replace(\"path\", \"circle\")}`);\r\n      //console.log(stoppedSignals);\r\n      return;\r\n    }\r\n    /*     if (gapInRealAttacks === 1 && stoppedSignals.length > 0) {\r\n      isTabActive = !document.hidden;\r\n      if (isTabActive) {\r\n        pathIdCount = 1;\r\n        //timeBetween = 0; //remove delay that is between repeating signals\r\n        stoppedSignals.forEach((param) => {\r\n          randomSignal(\r\n            param[0],\r\n            param[1],\r\n            param[2],\r\n            param[3],\r\n            param[4],\r\n            param[5],\r\n            param[6]\r\n          );\r\n        });\r\n        stoppedSignals = [];\r\n      }\r\n    } */\r\n    if (Date.now() > lastTime + randomInterval + timeBetween) {\r\n      // timebetween is 0 at the very start\r\n      lastTime = Date.now();\r\n\r\n      timeBetween = setTimeBetween;\r\n      randomInterval = randomTime(interval) + signalDuration * durationMod; //new random time\r\n      //console.log(randomInterval);\r\n      let city1 = id1;\r\n      let city2 = id2;\r\n      if (countries.includes(id1)) {\r\n        // if id is named after country name(from array) then it will be random city from that country each time attack is run\r\n        city1 = randomCity(id1);\r\n        while (city1 === \"West_Point\") {\r\n          city1 = randomCity(id1);\r\n        }\r\n      }\r\n      if (countries.includes(id2)) {\r\n        city2 = randomCity(id2);\r\n      }\r\n      if (city2 !== 0 && gapInRealAttacks === 1) {\r\n        // some predrawn attacks have id2=0\r\n        attack(city1, city2, color, bend); //business as usual;\r\n        if (countries.includes(id2) && randomInt(8) === 8) {\r\n          //sometimes attacks spread inside target country\r\n          setTimeout(() => {\r\n            for (let i = 0; i < randomInt(2) + 1; i++) {\r\n              attack(city2, randomCity(id2), color, bend, 0);\r\n            }\r\n          }, signalDuration * durationMod - 1500);\r\n        }\r\n      } else if (gapInRealAttacks === 1) {\r\n        // predrawn paths\r\n        const element = document.getElementById(id1);\r\n        const circle = document.getElementById(`${id1}_circle`);\r\n        element.classList.remove(...element.classList); // empty classlist of path\r\n        if (circle) {\r\n          circle.classList.remove(...circle.classList);\r\n          circle.classList.add(`circle${color}`);\r\n          circle.removeAttribute(\"r\");\r\n        }\r\n        element.classList.add(`up${color}`); // if layer ID ends with _w there will be no circle at the end of the path, but water splash\r\n        if (id1.slice(-2) == \"_w\") {\r\n          showLabel(\"West_Point\", 10, 1000, 7, -25, \"West Point\");\r\n          signal(id1, 0, durationMod);\r\n          const splash = 50;\r\n          ///\r\n          setTimeout(() => {\r\n            document.querySelector(\"#animationSVG\").insertAdjacentHTML(\r\n              \"afterbegin\",\r\n              ` <image class=\"splash\" width=\"${splash}px\" x=\"${\r\n                getCoordsById(`${city1}_circle`)[0] - splash * 0.47\r\n              }\" y=\"${\r\n                getCoordsById(`${city1}_circle`)[1] - splash * 0.7\r\n              }\" href=./SVG/splash.gif>\r\n          `\r\n            );\r\n            setTimeout(() => {\r\n              if (document.querySelector(\".splash\")) {\r\n                animationSvg.removeChild(document.querySelector(\".splash\"));\r\n              }\r\n            }, 1000);\r\n          }, signalDuration * durationMod * 0.5);\r\n\r\n          attackLog(\r\n            color,\r\n            attackDesc[color - 1][randomInt(attackDesc[0].length) - 1],\r\n            \"West Point\",\r\n            \"...\"\r\n          );\r\n        } else {\r\n          attackLog(\r\n            color,\r\n            attackDesc[color - 1][randomInt(attackDesc[0].length) - 1],\r\n            \"West Point\",\r\n            \"West Point\"\r\n          );\r\n          showLabel(\"West_Point\", 10, 1000, 7, -25, \"West Point\");\r\n          signal(id1, 2, durationMod);\r\n        } // second parameter must be 2 if it is predrawn path;\r\n      } // if second id is 0 it wont be animation between two ID-s, but one pre-drawn line.\r\n    }\r\n  }, 100);\r\n};\r\n\r\nconst showLabel = function (\r\n  id,\r\n  appear = 10,\r\n  fadeAway = 2000,\r\n  xoffset = 3,\r\n  yoffset = -10,\r\n  customID\r\n) {\r\n  const who =\r\n    citiesCrimsonia.includes(id) || id === \"West_Point\"\r\n      ? \"attacker\"\r\n      : \"attacked\";\r\n  let labelText;\r\n  if (customID) {\r\n    labelText = customID;\r\n  } else if (id.toLowerCase().startsWith(\"bt\")) {\r\n    labelText = id.toUpperCase().replace(/([A-Z]+)(\\d+)/, \"$1 $2\");\r\n  } else {\r\n    labelText = id;\r\n  }\r\n  setTimeout(() => {\r\n    document.querySelector(\"#animationSVG\").insertAdjacentHTML(\r\n      \"afterbegin\",\r\n      ` <text class=${who} x=\"${getCoordsById(id)[0] + xoffset}\" y=\"${\r\n        getCoordsById(id)[1] - yoffset\r\n      }\">${labelText}</text>\r\n`\r\n    );\r\n    const textElement = document.querySelector(`.${who}`);\r\n    setTimeout(() => {\r\n      if (textElement) {\r\n        textElement.classList.add(\"fadeout\");\r\n      }\r\n    }, fadeAway);\r\n    setTimeout(() => {\r\n      if (textElement) {\r\n        textElement.remove();\r\n      }\r\n    }, 5000);\r\n  }, appear);\r\n};\r\n\r\nconst attack = function (id1, id2, color, bend = 1, log = 1) {\r\n  makePathByID(id1, id2, color, bendRandom(bend));\r\n  //console.log(\"Created \" + latestPath);\r\n  const element = document.querySelector(`#${id1}`);\r\n  element.classList.add(\"ease\", \"start-glow\");\r\n  setTimeout(() => {\r\n    element.classList.toggle(\"start-glow\");\r\n  }, 400);\r\n  signal(latestPath);\r\n  if (log === 1) {\r\n    showLabel(id1, 10, 1000, 7, -25);\r\n  }\r\n  showLabel(id2, 1000, 2000, 5, 5);\r\n  if (log === 1) {\r\n    attackLog(\r\n      color,\r\n      attackDesc[color - 1][randomInt(attackDesc[0].length) - 1],\r\n      id1,\r\n      id2\r\n    );\r\n  } else if (log != 0) {\r\n    attackLog(\r\n      color,\r\n      log,\r\n      id1,\r\n      id2.toUpperCase().replace(/([A-Z]+)(\\d+)/, \"$1 $2\")\r\n    );\r\n  }\r\n  //console.log(\"signalled \" + latestPath);\r\n  const thislatestPath = latestPath;\r\n  setTimeout(function () {\r\n    if (document.getElementById(thislatestPath)) {\r\n      removePath(thislatestPath);\r\n      //  console.log(\"deleted \" + thislatestPath);\r\n    }\r\n    //console.log(latestPath + \" \" + thislatestPath);\r\n    if (\r\n      document.getElementById(`${thislatestPath.replace(\"path\", \"circle\")}`)\r\n    ) {\r\n      removePath(`${thislatestPath.replace(\"path\", \"circle\")}`);\r\n    }\r\n  }, signalDuration);\r\n};\r\n\r\n//All animation paths visible from beginning\r\n/* cssRuleSelector(\".up\", \"visibility\", \"visible\");\r\ncssRuleSelector(\".right\", \"visibility\", \"visible\");\r\ncssRuleSelector(\".left\", \"visibility\", \"visible\");\r\ncssRuleSelector(\".down\", \"visibility\", \"visible\"); */\r\n\r\n// function to load main code\r\n/* const hoverLand = function (){\r\n  const \r\n}\r\n */\r\nconst landHover = function () {\r\n  const landSquare = document.getElementById(\"land_square\");\r\n  //console.log(landSquare.firstElementChild.classList[0]);\r\n  addCSS(\r\n    `.${landSquare.firstElementChild.classList[0]}:hover`, //checks the name of the class that SVG automatically assigns to square element\r\n    `fill:rgb(35, 177, 243);transition:none;\r\n    filter: drop-shadow(0 0 5px rgba(0, 255, 255, 1))drop-shadow(0 0 5px rgba(0, 255, 255, 1));`\r\n  );\r\n  addCSS(\r\n    `.${landSquare.firstElementChild.classList[0]}`,\r\n    `\r\n  transition: all 2s ease-out;\r\n  stroke:red;\r\n  \r\n  stroke-width: 2px !important;\r\n  stroke-opacity:0;\r\n  pointer-events: stroke;\r\n\r\n  `\r\n  );\r\n};\r\n\r\nconst randomCity = function (attCountry = \"random\") {\r\n  let city;\r\n  attCountry === \"berylia\"\r\n    ? (city = citiesBerylia[randomInt(citiesBerylia.length) - 1])\r\n    : \"\";\r\n  attCountry === \"crimsonia\"\r\n    ? (city = citiesCrimsonia[randomInt(citiesCrimsonia.length) - 1])\r\n    : \"\";\r\n  attCountry === \"revalia\"\r\n    ? (city = citiesRevalia[randomInt(citiesRevalia.length) - 1])\r\n    : \"\";\r\n  attCountry === \"netoria\"\r\n    ? (city = citiesNetoria[randomInt(citiesNetoria.length) - 1])\r\n    : \"\";\r\n  attCountry === \"random\" ? (city = cities[randomInt(cities.length) - 1]) : \"\";\r\n  return city;\r\n};\r\n\r\nconst attackLog = function (threatLevel = 2, description, attacker, defender) {\r\n  let klingon = \"log-title\";\r\n  if (!defender.toLowerCase().startsWith(\"bt\")) {\r\n    randomInt(12) === 12 ? (klingon = \"log-title-klingon\") : \"\";\r\n  } else {\r\n    klingon = \"log-title\";\r\n  }\r\n\r\n  const html = `<div class=\"log-event\">\r\n  <div class=\"threat-circle-${threatLevel}\"></div>\r\n      <div class=\"log-content\">\r\n          <div class=\"${klingon}\"}>${description}\r\n          </div>\r\n          <div class=\"log-details\">\r\n              <div class=\"log-time\"><img src=\"./SVG/clock.svg\" class=\"log-time-icon\">\r\n              <span class=\"time\">${new Date().toLocaleTimeString(\r\n                \"en-GB\"\r\n              )}</span></div>\r\n              <div class=\"log-city\">\r\n              <span>${attacker}</span></div>\r\n              <div class=\"log-arrow-${threatLevel}\"></div>\r\n              <div class=\"log-city\">\r\n             \r\n              <span>${defender}</span></div>\r\n            \r\n          </div>       \r\n      </div>\r\n      </div>`;\r\n  const elements = document.getElementsByClassName(\"log-event\");\r\n  const log = document.getElementById(\"log\");\r\n  elements.length >= 10 ? log.removeChild(log.lastElementChild) : \"\";\r\n  log.insertAdjacentHTML(\"afterbegin\", html);\r\n};\r\n////////////////////////////\r\n////////// API /////////////\r\n////////////////////////////\r\nasync function attacksAPI() {\r\n  let api = new API();\r\n  let team = \"all\";\r\n  let datas = (await api.getData(team)) || {};\r\n  let events = datas.arrows;\r\n  let eventNo = 0;\r\n  gapInRealAttacks = 0;\r\n  /////SETTINGS///\r\n  let testing = 1; // turn test data from data.js on/off\r\n  let refreshInterval = 30000; // how often it looks for new data from server\r\n  let gapSizeToFill = 8000; // Simulated attacks start when gap of this size is detected  between real attacks\r\n\r\n  if (testing === 1) {\r\n    // testData is in data.js\r\n    events = testData;\r\n  }\r\n  /* events.forEach((data) => {\r\n    data.end = data.end.toUpperCase().replace(/([A-Z]+)(\\d+)/, \"$1 $2\");\r\n  }); */\r\n  events.sort((a, b) => a.TS - b.TS);\r\n\r\n  const makePresent = function () {\r\n    let timeDiff = Date.now() - events[0].TS;\r\n    events.forEach((data) => {\r\n      data.TS += timeDiff + 2000;\r\n    });\r\n  };\r\n  makePresent();\r\n\r\n  setInterval(() => {\r\n    if (Math.abs(events[eventNo].TS - Date.now()) < 300) {\r\n      attack(\r\n        randomCity(events[eventNo].begin),\r\n        events[eventNo].end,\r\n        1,\r\n        0.7,\r\n        `Attack on ${events[eventNo].target}`\r\n      );\r\n      eventNo++;\r\n    }\r\n    if (Math.abs(events[eventNo].TS - Date.now()) > gapInRealAttacks) {\r\n      gapInRealAttacks = 1;\r\n    }\r\n    if (Math.abs(events[eventNo].TS - Date.now()) < 1000) {\r\n      gapInRealAttacks = 0;\r\n    }\r\n  }, 400);\r\n\r\n  /*  if (events) {\r\n    // just for seeing log if imported data or testdata\r\n    events.forEach((data) => {\r\n      console.log(data);\r\n    });\r\n  } else {\r\n    console.log(\"No arrows found or data fetch failed.\");\r\n  } */\r\n\r\n  const refreshData = function (interval = 30000) {\r\n    //gets the data from the server again\r\n    setInterval(async () => {\r\n      eventNo = 0;\r\n      datas = (await api.getData(team)) || {};\r\n      events = datas.arrows;\r\n      await makePresent();\r\n      events.sort((a, b) => a.TS - b.TS);\r\n    }, interval);\r\n  };\r\n\r\n  refreshData(refreshInterval);\r\n}\r\n\r\nasync function initialize() {\r\n  try {\r\n    /////////////ALL GRAPHICAL STUFF//////////////\r\n    await loadSVG(\"map\", \"mapContainer\");\r\n    await map(); //defines map svg object as const\r\n    await animation(); //defines animationSVG as const\r\n    landHover(); // cursor hover effect over land\r\n\r\n    mapClick(); //eventListener for clicking on map\r\n    attacksAPI();\r\n\r\n    //RANDOM FILLING ATTACKS - active only in gaps of specific lengths//\r\n\r\n    randomSignal(\"crimsonia\", \"berylia\", 2, 0.7);\r\n    randomSignal(\"crimsonia\", \"berylia\", 2, 0.7);\r\n    randomSignal(\"crimsonia\", \"berylia\", 2, 0.7, 50000);\r\n    randomSignal(\"crimsonia\", \"berylia\", 2, 0.7, 50000);\r\n    randomSignal(\"crimsonia\", \"berylia\", 2, 0.7, 80000);\r\n    randomSignal(\"crimsonia\", \"berylia\", 2, 0.7, 80000);\r\n    randomSignal(\"crimsonia\", \"netoria\", 2, 0.7);\r\n\r\n    randomSignal(\"westPoint1_w\", 0, 2, 1, 600000, 3); //path name, 0 - predrawn path, threat type, bend of the path(when not predrawn),pause between signals (randomly within this number), animation speed modifier\r\n    randomSignal(\"westPoint2_w\", 0, 2, 1, 600000, 3);\r\n    randomSignal(\"westPoint3\", 0, 2, 1, 600000, 2);\r\n    randomSignal(\"westPoint4\", 0, 2, 1, 600000, 2);\r\n    //activeSignals.forEach(randomSignal);\r\n    //////////////////////////////////////////////// */\r\n  } catch (error) {\r\n    console.error(\"Initialization failed:\", error);\r\n  }\r\n}\r\n\r\n//load main code above\r\ndocument.addEventListener(\"DOMContentLoaded\", initialize);\r\n","\"use strict\";\r\n\r\nexport const cssRuleSelector = function (selector, property, newValue) {\r\n  for (const sheet of document.styleSheets) {\r\n    for (const rule of sheet.cssRules) {\r\n      if (rule.selectorText === selector) {\r\n        rule.style[property] = newValue;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const loadSVG = async function (fileName, destination = \"body\") {\r\n  try {\r\n    // Fetch the SVG file\r\n    const response = await fetch(`SVG/${fileName}.svg`);\r\n\r\n    // Convert the response to text (SVG content)\r\n    const svgContent = await response.text();\r\n\r\n    // Create a temporary container for the SVG content\r\n    const tempDiv = document.createElement(\"div\");\r\n    tempDiv.innerHTML = svgContent;\r\n\r\n    // Get the first SVG element from the loaded content\r\n    const svgElement = tempDiv.querySelector(\"svg\");\r\n\r\n    if (fileName === \"map\" && svgElement) {\r\n      // Set preserveAspectRatio attribute if fileName is 'main'\r\n      svgElement.setAttribute(\"preserveAspectRatio\", \"xMidYMin meet\");\r\n      svgElement.setAttribute(\"id\", \"map\");\r\n    }\r\n\r\n    // Insert the modified SVG content into the specified destination\r\n    document\r\n      .getElementById(destination)\r\n      .insertAdjacentHTML(\"beforeend\", tempDiv.innerHTML);\r\n  } catch (error) {\r\n    console.error(\"Error loading SVG:\", error);\r\n  }\r\n};\r\n\r\nexport function randomInt(num) {\r\n  return Math.floor(Math.random() * num) + 1;\r\n}\r\n\r\nexport function getRandomRGB() {\r\n  const r = Math.floor(Math.random() * 256); // Random number between 0-255\r\n  const g = Math.floor(Math.random() * 256);\r\n  const b = Math.floor(Math.random() * 256);\r\n  return `rgb(${r}, ${g}, ${b})`; // Return as an RGB string\r\n}\r\n\r\n//ads new css rule\r\nexport function addCSS(Name, rules) {\r\n  const styleSheet = document.styleSheets[0]; // Get the first stylesheet\r\n  styleSheet.insertRule(`${Name} { ${rules} }`, styleSheet.cssRules.length);\r\n}\r\n\r\n// Amplitude of random bendiness\r\nexport function bendRandom(bendiness) {\r\n  return (Math.random() - 0.5).toFixed(1) * 2 * bendiness;\r\n}\r\n","\"use strict\";\r\n\r\nexport const countries = [\r\n  \"berylia\",\r\n  \"crimsonia\",\r\n  \"revalia\",\r\n  \"netoria\",\r\n  \"random\",\r\n];\r\nexport const citiesBerylia = [\r\n  \"Bancroft\",\r\n  \"Moazac\",\r\n  \"Lambeck\",\r\n  \"Durgan\",\r\n  \"Portsmith\",\r\n  \"Kral\",\r\n  \"Erack\",\r\n  \"Glassmoor\",\r\n  \"Elev\",\r\n  \"Koat\",\r\n  \"Kranin\",\r\n  \"Tanix\",\r\n  \"Carcastle\",\r\n  \"Zechan\",\r\n  \"Janford\",\r\n  \"Wildehill\",\r\n  \"Vundan\",\r\n  \"Tettlewick\",\r\n  \"Bakun\",\r\n  \"Paldar\",\r\n  \"Norville\",\r\n  \"Mizim\",\r\n  \"Pineland\",\r\n  \"Vear\",\r\n  \"Adeasa\",\r\n];\r\n\r\nexport const citiesCrimsonia = [\r\n  \"Strin\",\r\n  \"Streka\",\r\n  \"Ugrark\",\r\n  \"Vrodnard\",\r\n  \"Roseiron\",\r\n  \"Daka\",\r\n  \"Srodon\",\r\n  \"Vlando\",\r\n  \"Upul\",\r\n  \"Xurg\",\r\n  \"Olkburg\",\r\n  \"Goit\",\r\n  \"Drespus\",\r\n];\r\n\r\nexport const citiesRevalia = [\r\n  \"Valora\",\r\n  \"Eldhrim\",\r\n  \"Fjallborg\",\r\n  \"Njordheim\",\r\n  \"Runestad\",\r\n];\r\n\r\nexport const citiesNetoria = [\r\n  \"Norvayne\",\r\n  \"Valharm\",\r\n  \"Marvyn\",\r\n  \"Solhaven\",\r\n  \"Elden\",\r\n  \"Stornholm\",\r\n  \"Havenbrook\",\r\n];\r\nexport const cities = [\r\n  ...citiesBerylia,\r\n  ...citiesCrimsonia,\r\n  ...citiesRevalia,\r\n  ...citiesNetoria,\r\n];\r\n\r\nexport const descLvl1 = [\r\n  \"SQL Injection via login form bypass (CVE-2024-10001)\",\r\n  \"Remote code execution in API endpoint (CVE-2024-10002)\",\r\n  \"Privilege escalation via kernel flaw (CVE-2024-10003)\",\r\n  \"Heap overflow in image parsing library (CVE-2024-10004)\",\r\n  \"Arbitrary file read in config file parser (CVE-2024-10005)\",\r\n  \"Bypass authentication via session fixation (CVE-2024-10006)\",\r\n  \"Command injection in web shell upload (CVE-2024-10007)\",\r\n  \"SSRF attack leaking internal resources (CVE-2024-10008)\",\r\n  \"Race condition in user privilege assignment (CVE-2024-10009)\",\r\n  \"Buffer overflow in XML parser (CVE-2024-10010)\",\r\n  \"Deserialization attack in web API (CVE-2024-10011)\",\r\n  \"Unrestricted file upload leads to RCE (CVE-2024-10012)\",\r\n  \"Stored XSS in profile image metadata (CVE-2024-10013)\",\r\n  \"Path traversal allows arbitrary file deletion (CVE-2024-10014)\",\r\n  \"Memory corruption via malformed network packets (CVE-2024-10015)\",\r\n  \"Clickjacking on financial transaction page (CVE-2024-10016)\",\r\n  \"DNS rebinding attack exposing local services (CVE-2024-10017)\",\r\n  \"IDOR vulnerability exposing customer invoices (CVE-2024-10018)\",\r\n  \"Unprotected admin panel accessible via parameter tampering (CVE-2024-10019)\",\r\n  \"Zero-day exploit in mobile authentication flow (CVE-2024-10020)\",\r\n];\r\nexport const descLvl2 = [\r\n  \"Fake invoice email impersonating Microsoft\",\r\n  \"CEO fraud email requesting urgent wire transfer\",\r\n  \"Phishing site mimicking bank login page\",\r\n  \"Malicious PDF attachment delivering credential harvester\",\r\n  \"Voice phishing call pretending to be IT support\",\r\n  \"Gift card scam targeting HR department\",\r\n  \"Spear phishing email with malware-laden job offer\",\r\n  \"Fake security alert redirecting to credential-stealing site\",\r\n  \"Lookalike domain tricking employees into login submission\",\r\n  \"Smishing campaign using fake delivery notifications\",\r\n  \"Compromised supplier email requesting payment changes\",\r\n  \"Social engineering attack posing as a government agency\",\r\n  \"Malicious QR code leading to credential theft\",\r\n  \"Compromised cloud storage link spreading malware\",\r\n  \"AI-generated deepfake video call impersonating executive\",\r\n  \"Subscription renewal scam harvesting credit card details\",\r\n  \"Fake LinkedIn job invitation leading to credential theft\",\r\n  \"Email spoofing attack impersonating internal IT team\",\r\n  \"Survey scam collecting personal data for identity theft\",\r\n  \"Fake tech support popup prompting remote access installation\",\r\n];\r\nexport const descLvl3 = [\r\n  \"Ransomware encrypting company files with AES-256\",\r\n  \"Trojan disguised as a banking application\",\r\n  \"Spyware capturing keystrokes and screenshots\",\r\n  \"Worm propagating via SMB protocol exploitation\",\r\n  \"Rootkit embedding itself into system kernel\",\r\n  \"Malvertising campaign injecting drive-by malware\",\r\n  \"Botnet infection launching DDoS attacks\",\r\n  \"Crypto-mining malware draining CPU resources\",\r\n  \"Fileless malware executing in system memory\",\r\n  \"Backdoor allowing persistent attacker access\",\r\n  \"Polymorphic virus evading signature-based detection\",\r\n  \"Trojanized software update distributing malicious payload\",\r\n  \"Stealer malware exfiltrating stored passwords\",\r\n  \"Keylogger capturing credentials from online forms\",\r\n  \"Logic bomb triggered after specific employee termination\",\r\n  \"Adware injecting unwanted browser extensions\",\r\n  \"USB drop attack deploying remote access trojan\",\r\n  \"Supply chain attack inserting malware into firmware updates\",\r\n  \"Rogue antivirus software scamming users with fake threats\",\r\n  \"Hidden RAT (Remote Access Trojan) granting full system control\",\r\n];\r\nexport const attackDesc = [descLvl1, descLvl2, descLvl3];\r\n\r\nexport const testData = [\r\n  { TS: 1746092767731, begin: \"crimsonia\", end: \"bt02\", target: \"satellite\" },\r\n  { TS: 1746092769731, begin: \"crimsonia\", end: \"bt04\", target: \"satellite\" },\r\n  { TS: 1746092772731, begin: \"crimsonia\", end: \"bt12\", target: \"satellite\" },\r\n  { TS: 1746092782731, begin: \"crimsonia\", end: \"bt01\", target: \"satellite\" },\r\n  { TS: 1746092785731, begin: \"crimsonia\", end: \"bt06\", target: \"power plant\" },\r\n  { TS: 1746092788731, begin: \"crimsonia\", end: \"bt10\", target: \"satellite\" },\r\n  { TS: 1746092791731, begin: \"crimsonia\", end: \"bt15\", target: \"satellite\" },\r\n  { TS: 1746092794731, begin: \"crimsonia\", end: \"bt02\", target: \"satellite\" },\r\n  { TS: 1746092797731, begin: \"crimsonia\", end: \"bt17\", target: \"power plant\" },\r\n  { TS: 1746092800731, begin: \"crimsonia\", end: \"bt16\", target: \"satellite\" },\r\n  { TS: 1746092803731, begin: \"crimsonia\", end: \"bt12\", target: \"power plant\" },\r\n  { TS: 1746092806731, begin: \"crimsonia\", end: \"bt11\", target: \"satellite\" },\r\n  { TS: 1746092809731, begin: \"crimsonia\", end: \"bt05\", target: \"satellite\" },\r\n  { TS: 1746092812731, begin: \"crimsonia\", end: \"bt12\", target: \"power plant\" },\r\n  { TS: 1746092827731, begin: \"crimsonia\", end: \"bt01\", target: \"satellite\" },\r\n  { TS: 1746092830731, begin: \"crimsonia\", end: \"bt06\", target: \"satellite\" },\r\n  { TS: 1746092833731, begin: \"crimsonia\", end: \"bt10\", target: \"power plant\" },\r\n  { TS: 1746092836731, begin: \"crimsonia\", end: \"bt15\", target: \"satellite\" },\r\n  { TS: 1746092839731, begin: \"crimsonia\", end: \"bt02\", target: \"satellite\" },\r\n  { TS: 1746092842731, begin: \"crimsonia\", end: \"bt17\", target: \"satellite\" },\r\n  { TS: 1746092845731, begin: \"crimsonia\", end: \"bt16\", target: \"power plant\" },\r\n  { TS: 1746092848731, begin: \"crimsonia\", end: \"bt12\", target: \"satellite\" },\r\n  { TS: 1746092851731, begin: \"crimsonia\", end: \"bt02\", target: \"satellite\" },\r\n  { TS: 1746092854731, begin: \"crimsonia\", end: \"bt17\", target: \"power plant\" },\r\n  { TS: 1746092857731, begin: \"crimsonia\", end: \"bt16\", target: \"satellite\" },\r\n  { TS: 1746092860731, begin: \"crimsonia\", end: \"bt12\", target: \"power plant\" },\r\n  { TS: 1746092863731, begin: \"crimsonia\", end: \"bt11\", target: \"satellite\" },\r\n  { TS: 1746092875731, begin: \"crimsonia\", end: \"bt05\", target: \"power plant\" },\r\n  { TS: 1746092878731, begin: \"crimsonia\", end: \"bt12\", target: \"satellite\" },\r\n  { TS: 1746092880731, begin: \"crimsonia\", end: \"bt01\", target: \"power plant\" },\r\n  { TS: 1746092882731, begin: \"crimsonia\", end: \"bt06\", target: \"satellite\" },\r\n  { TS: 1746092884731, begin: \"crimsonia\", end: \"bt10\", target: \"satellite\" },\r\n  { TS: 1746092886731, begin: \"crimsonia\", end: \"bt15\", target: \"satellite\" },\r\n];\r\n","\"use strict\";\r\nexport const setTimeBetween = 4000; //minimum time between same signal command\r\nexport const setRandomInterval = 30000;\r\nexport const signalDuration = 2500;\r\n","class API {\r\n  constructor() {\r\n    this.db_url = \"http://20.39.193.222:5000\";\r\n  }\r\n\r\n  async getData(team) {\r\n    try {\r\n      const response = await fetch(`${this.db_url}/data?team=${team}`);\r\n      if (!response.ok) throw new Error(`Error: ${response.status}`);\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async deleteField(team, field) {\r\n    try {\r\n      const response = await fetch(`${this.db_url}/data/delete`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ team, field }),\r\n      });\r\n      const result = await response.json();\r\n      if (!response.ok) throw new Error(result.error);\r\n      console.log(`Success: ${result.message}`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error(error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\nexport default API;\r\n"],"names":["$efd3ba4ec2608b1d$var$latestPath","$efd3ba4ec2608b1d$var$mapSvg","$efd3ba4ec2608b1d$var$animationSvg","$efd3ba4ec2608b1d$var$clickX","$efd3ba4ec2608b1d$var$clickY","$efd3ba4ec2608b1d$var$svgX","$efd3ba4ec2608b1d$var$svgY","$86ac46d6b1918ed8$export$c32505ea942c7f01","fileName","destination","response","fetch","svgContent","text","tempDiv","document","createElement","innerHTML","svgElement","querySelector","setAttribute","getElementById","insertAdjacentHTML","error","console","$86ac46d6b1918ed8$export$3c5f89dae98e900b","num","Math","floor","random","$86ac46d6b1918ed8$export$bd362de25b6c5ab1","Name","rules","styleSheet","styleSheets","insertRule","cssRules","length","$86ac46d6b1918ed8$export$40532d2a8b2a1d98","bendiness","toFixed","$1a6cd9663479e45c$export$e5ad74579c86b003","$1a6cd9663479e45c$export$6d129767a7753f41","$1a6cd9663479e45c$export$f11851f788d38c96","$1a6cd9663479e45c$export$50e3bd503f4a0176","$1a6cd9663479e45c$export$b0f4ba35f291a431","$1a6cd9663479e45c$export$8bda5276ea496e31","$1a6cd9663479e45c$export$af308143cc80ecd1","$1a6cd9663479e45c$export$e6903a0a05ffe5f9","TS","begin","end","target","$19f3c469475076c6$export$2e2bcd8739ae039","constructor","db_url","getData","team","ok","Error","status","json","deleteField","field","method","headers","body","JSON","stringify","result","log","message","$efd3ba4ec2608b1d$var$isTabActive","$efd3ba4ec2608b1d$var$stoppedSignals","$efd3ba4ec2608b1d$var$pathIdCount","$efd3ba4ec2608b1d$var$gapInRealAttacks","$efd3ba4ec2608b1d$var$map","$efd3ba4ec2608b1d$var$animation","$efd3ba4ec2608b1d$var$pathName","type","String","padStart","$efd3ba4ec2608b1d$var$makePath","x1","y1","x2","y2","color","bend","animate","direction","xhalf","yhalf","abs","$efd3ba4ec2608b1d$var$getCoordsById","id","bbox1","getBBox","centerX1","x","width","y","height","$efd3ba4ec2608b1d$var$makePathByID","id1","id2","$efd3ba4ec2608b1d$var$removePath","pathID","removeChild","$efd3ba4ec2608b1d$var$clickNum","$efd3ba4ec2608b1d$var$mapClick","addEventListener","event","matrix","getScreenCTM","inverse","a","clientX","e","d","clientY","f","$efd3ba4ec2608b1d$var$signal","pathName","circle","durationMod","timeline","anime","loop","svgPath","pathLength","getTotalLength","style","visibility","add","targets","strokeDashoffset","setDashoffset","easing","duration","delay","replace","opacity","scale","hidden","forEach","param","$efd3ba4ec2608b1d$var$randomSignal","$efd3ba4ec2608b1d$var$randomTime","max","interval","lastTime","Date","now","randomInterval","timeBetween","interval1","setInterval","clearInterval","push","city1","city2","includes","$efd3ba4ec2608b1d$var$randomCity","$efd3ba4ec2608b1d$var$attack","setTimeout","i","element","classList","remove","removeAttribute","slice","$efd3ba4ec2608b1d$var$showLabel","splash","$efd3ba4ec2608b1d$var$attackLog","appear","fadeAway","xoffset","yoffset","customID","labelText","who","toLowerCase","startsWith","toUpperCase","textElement","toggle","thislatestPath","$efd3ba4ec2608b1d$var$landHover","landSquare","firstElementChild","attCountry","city","threatLevel","description","attacker","defender","klingon","html","toLocaleTimeString","elements","getElementsByClassName","lastElementChild","$efd3ba4ec2608b1d$var$attacksAPI","api","datas","events","arrows","eventNo","sort","b","makePresent","timeDiff","data","refreshData","$efd3ba4ec2608b1d$var$initialize"],"version":3,"file":"CyberAttacks.b25a9ec0.js.map"}